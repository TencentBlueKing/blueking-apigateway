- model: schema.schema
  fields:
    created_time: 2023-02-02 14:54:21.010753+00:00
    updated_time: 2023-02-02 14:54:21.010788+00:00
    name: bk-cors
    type: plugin
    version: '0'
    _schema: |-
      {
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object",
        "properties": {
          "allow_origins": {
            "description": "you can use '*' to allow all origins when no credentials, '**' to allow forcefully(it will bring some security risks, be carefully), multiple origin use ',' to split. default: *.",
            "type": "string",
            "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
            "default": "*"
          },
          "allow_methods": {
            "description": "you can use '*' to allow all methods when no credentials, '**' to allow forcefully(it will bring some security risks, be carefully), multiple method use ',' to split. default: *.",
            "type": "string",
            "default": "*"
          },
          "allow_headers": {
            "description": "you can use '*' to allow all header when no credentials, '**' to allow forcefully(it will bring some security risks, be carefully), multiple header use ',' to split. default: *.",
            "type": "string",
            "default": "*"
          },
          "expose_headers": {
            "description": "you can use '*' to expose all header when no credentials, '**' to allow forcefully(it will bring some security risks, be carefully), multiple header use ',' to split. default: *.",
            "type": "string",
            "default": "*"
          },
          "max_age": {
            "description": "maximum number of seconds the results can be cached. -1 means no cached, the max value is depend on browser, more details plz check MDN. default: 5.",
            "type": "integer",
            "default": 5
          },
          "allow_credential": {
            "description": "allow client append credential. according to CORS specification, if you set this option to 'true', you can not use '*' for other options.",
            "type": "boolean",
            "default": false
          },
          "allow_origins_by_regex": {
            "type": "array",
            "description": "you can use regex to allow specific origins when no credentials, for example use [.*\\.test.com] to allow a.test.com and b.test.com",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4096
            },
            "minItems": 1,
            "uniqueItems": true
          },
          "allow_origins_by_metadata": {
            "type": "array",
            "description": "set allowed origins by referencing origins in plugin metadata",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4096
            },
            "minItems": 1,
            "uniqueItems": true
          },
          "_meta": {
            "type": "object",
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": {
                "type": "boolean"
              },
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              }
            }
          }
        }
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: bk-cors
    name: 跨域资源共享（CORS）
    name_en: Cross-Origin Resource Sharing (CORS)
    is_public: true
    scope: stage_and_resource
    priority: 17900
    schema:
    - bk-cors
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - bk-cors
    notes: 为 API 增加 CORS（Cross-Origin Resource Sharing，跨域资源共享）的返回头。
    example: "作用：允许 https://a.example.com:8081, https://b.example.com:8081 这两个站点发起跨域请求\n\nallow_origins: \nallow_origins_by_regex: ^https://.*\\.example\\.com:8081$\nallow_methods: GET,POST,PUT,PATCH,HEAD,DELETE,OPTIONS\nallow_headers: **\nexpose_headers: \nmax_age: 86400\nallow_credential: false"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "required": [
            "allow_methods",
            "allow_headers",
            "max_age"
          ],
          "properties": {
            "allow_origins": {
              "description": "允许跨域访问的 Origin，格式为 scheme://host:port，示例如 https://example.com:8081。如果你有多个 Origin，请使用 , 分隔。当 allow_credential 为 false 时，可以使用 * 来表示允许所有 Origin 通过。你也可以在启用了 allow_credential 后使用 ** 强制允许所有 Origin 均通过，但请注意这样存在安全隐患。allow_origins、allow_origins_by_regex 只能一个有效。",
              "type": "string",
              "pattern": "^(|\\*|\\*\\*|null|http(s)?://[-a-zA-Z0-9:\\[\\]\\.]+(,http(s)?://[-a-zA-Z0-9:\\[\\]\\.]+)*)$",
              "maxLength": 4096,
              "default": "",
              "ui:props": {
                "labelWidth": 200
              }
            },
            "allow_origins_by_regex": {
              "description": "使用正则表示的允许跨域访问的 Origin，示例如 '^https://.*\\.example\\.com:8081$'，此正则允许 https://a.example.com:8081, https://b.example.com:8081。allow_origins、allow_origins_by_regex 只能一个有效。",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "minLength": 1,
                "maxLength": 4096,
                "pattern": "^(\\^)?[-a-zA-Z0-9:/\\[\\]\\{\\}\\(\\)\\.\\*\\+\\?\\|\\\\]+(\\$)?$"
              },
              "ui:component": {
                "name": "bfArray"
              },
              "ui:props": {
                "labelWidth": 200
              }
            },
            "allow_methods": {
              "description": "允许跨域访问的 Method，比如：GET，POST 等。如果你有多个 Method，请使用 , 分割。当 allow_credential 为 false 时，可以使用 * 来表示允许所有 Method 通过。你也可以在启用了 allow_credential 后使用 ** 强制允许所有 Method 都通过，但请注意这样存在安全隐患。",
              "type": "string",
              "default": "**",
              "pattern": "^(\\*|\\*\\*|(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE)(,(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE))*)$",
              "maxLength": 100,
              "ui:rules": [
                "required"
              ],
              "ui:props": {
                "labelWidth": 200
              }
            },
            "allow_headers": {
              "description": "允许跨域访问时请求方携带哪些非 CORS 规范 以外的 Header。如果你有多个 Header，请使用 , 分割。当 allow_credential 为 false 时，可以使用 * 来表示允许所有 Header 通过。你也可以在启用了 allow_credential 后使用 ** 强制允许所有 Header 都通过，但请注意这样存在安全隐患。",
              "type": "string",
              "default": "**",
              "pattern": "^(\\*|\\*\\*|[-a-zA-Z0-9]+(,[-a-zA-Z0-9]+)*)$",
              "maxLength": 4096,
              "ui:rules": [
                "required"
              ],
              "ui:props": {
                "labelWidth": 200
              }
            },
            "expose_headers": {
              "description": "允许跨域访问时响应方携带哪些非 CORS 规范 以外的 Header。如果你有多个 Header，请使用 , 分割。当 allow_credential 为 false 时，可以使用 * 来表示允许任意 Header。你也可以在启用了 allow_credential 后使用 ** 强制允许任意 Header，但请注意这样存在安全隐患。",
              "type": "string",
              "pattern": "^(|\\*|\\*\\*|[-a-zA-Z0-9]+(,[-a-zA-Z0-9]+)*)$",
              "maxLength": 4096,
              "default": "",
              "ui:props": {
                "labelWidth": 200
              }
            },
            "max_age": {
              "description": "浏览器缓存 CORS 结果的最大时间，单位为秒。在这个时间范围内，浏览器会复用上一次的检查结果，-1 表示不缓存。请注意各个浏览器允许的最大时间不同。",
              "type": "integer",
              "default": 86400,
              "ui:rules": [
                "required"
              ],
              "ui:component": {
                "name": "bfInput",
                "min": -1,
                "unit": "秒"
              },
              "ui:props": {
                "labelWidth": 200
              }
            },
            "allow_credential": {
              "description": "是否允许跨域访问的请求方携带凭据（如 Cookie 等）。根据 CORS 规范，如果设置该选项为 true，那么将不能在其他属性中使用 *。",
              "type": "boolean",
              "default": true,
              "ui:props": {
                "labelWidth": 200
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - bk-cors
    notes: The cors Plugins lets you enable CORS easily.
    example: "Purpose: allows https://a.example.com:8081, https://b.example.com:8081 this two site launch cross-domain request\n\nallow_origins: \nallow_origins_by_regex: ^https://.*\\.example\\.com:8081$\nallow_methods: GET,POST,PUT,PATCH,HEAD,DELETE,OPTIONS\nallow_headers: **\nexpose_headers: \nmax_age: 86400\nallow_credential: false"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "required": [
            "allow_methods",
            "allow_headers",
            "max_age"
          ],
          "properties": {
            "allow_origins": {
              "description": "Origins to allow CORS. Use the scheme://host:port format. For example, https://example.com:8081. If you have multiple origins, use a , to list them. If allow_credential is set to false, you can enable CORS for all origins by using *. If allow_credential is set to true, you can forcefully allow CORS on all origins by using ** but it will pose some security issues. allow_origins, allow_origins_by_regex can only be one valid at a time.",
              "type": "string",
              "pattern": "^(|\\*|\\*\\*|null|http(s)?://[-a-zA-Z0-9:\\[\\]\\.]+(,http(s)?://[-a-zA-Z0-9:\\[\\]\\.]+)*)$",
              "default": ""
            },
            "allow_origins_by_regex": {
              "description": "Origin that allows CORS using regular expressions. You can use regex to allow specific origins when no credentials, for example, '^https://.*\\.example\\.com:8081$', this regular expression allows https://a.example.com:8081, https://b.example.com:8081. allow_origins, allow_origins_by_regex can only be one valid at a time.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "minLength": 1,
                "maxLength": 4096,
                "pattern": "^(\\^)?[-a-zA-Z0-9:/\\[\\]\\{\\}\\(\\)\\.\\*\\+\\?\\|\\\\]+(\\$)?$"
              },
              "ui:component": {
                "name": "bfArray"
              }
            },
            "allow_methods": {
              "description": "Request methods to enable CORS on. For example GET, POST. Use , to add multiple methods. If allow_credential is set to false, you can enable CORS for all methods by using *. If allow_credential is set to true, you can forcefully allow CORS on all methods by using ** but it will pose some security issues.",
              "type": "string",
              "default": "**",
              "pattern": "^(\\*|\\*\\*|(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE)(,(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE))*)$",
              "maxLength": 100,
              "ui:rules": [
                "required"
              ]
            },
            "allow_headers": {
              "description": "Headers in the request allowed when accessing a cross-origin resource. Use , to add multiple headers. If allow_credential is set to false, you can enable CORS for all request headers by using *. If allow_credential is set to true, you can forcefully allow CORS on all request headers by using ** but it will pose some security issues.",
              "type": "string",
              "default": "**",
              "pattern": "^(\\*|\\*\\*|[-a-zA-Z0-9]+(,[-a-zA-Z0-9]+)*)$",
              "maxLength": 4096,
              "ui:rules": [
                "required"
              ]
            },
            "expose_headers": {
              "description": "Headers in the response allowed when accessing a cross-origin resource. Use , to add multiple headers. If allow_credential is set to false, you can enable CORS for all response headers by using *. If allow_credential is set to true, you can forcefully allow CORS on all response headers by using ** but it will pose some security issues.",
              "type": "string",
              "pattern": "^(|\\*|\\*\\*|[-a-zA-Z0-9]+(,[-a-zA-Z0-9]+)*)$",
              "maxLength": 4096,
              "default": ""
            },
            "max_age": {
              "description": "Maximum time in seconds the result is cached. If the time is within this limit, the browser will check the cached result. Set to -1 to disable caching. Note that the maximum value is browser dependent.",
              "type": "integer",
              "default": 86400,
              "ui:rules": [
                "required"
              ],
              "ui:component": {
                "name": "bfInput",
                "min": -1,
                "unit": "Seconds"
              }
            },
            "allow_credential": {
              "description": "When set to true, allows requests to include credentials like cookies. According to CORS specification, if you set this to true, you cannot use '*' to allow all for the other attributes.",
              "type": "boolean",
              "default": true
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: schema.schema
  fields:
    created_time: 2023-07-07 11:48:21.010753+00:00
    updated_time: 2023-07-07 11:48:21.010788+00:00
    name: bk-header-rewrite
    type: plugin
    version: '0'
    _schema: |-
      {
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object",
        "description": "new headers for request",
        "minProperties": 1,
        "additionalProperties": false,
        "properties": {
          "set": {
            "type": "object",
            "patternProperties": {
              "^[^:]+$": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            }
          },
          "remove": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[^:]+$"
            }
          }
        }
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: bk-header-rewrite
    name: Header 转换
    name_en: Header transformation
    is_public: true
    scope: stage_and_resource
    priority: 17421
    schema:
    - bk-header-rewrite
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - bk-header-rewrite
    notes: "对请求添加或删除请求头。\n注意设置的值中支持`$`符号，（变量，不存在则为空）; `$arg_foo`获取 query string 中`foo`的值，`$http_bar`可以获取 header 中 `bar`的值。"
    example: "作用：设置 header `X-Api-Version: 1`，并且删除 header `X-test`\n\n设置：X-Api-Version: 1\n删除：X-test"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "properties": {
            "set": {
              "description": "设置的请求头",
              "items": {
                "properties": {
                  "key": {
                    "title": "键",
                    "description": "您可以设置请求头的键，请求头的键中不能包含冒号（:）。",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": [
                      "required"
                    ]
                  },
                  "value": {
                    "title": "值",
                    "description": "您可以设置请求头的值。",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\s\\S]*$",
                    "ui:rules": [
                      "required"
                    ]
                  }
                },
                "type": "object"
              },
              "minItems": 0,
              "title": "设置",
              "type": "array",
              "ui:component": {
                "name": "bfArray"
              },
              "ui:rules": [
                {
                  "validator": "{{ $self.getValue('set').length || $self.getValue('remove').length }}",
                  "message": "请求头设置或删除至少需要配置一个"
                }
              ]
            },
            "remove": {
              "description": "删除的请求头",
              "items": {
                "properties": {
                  "key": {
                    "title": "键",
                    "description": "您可以删除请求头的键，请求头的键中不能包含冒号（:）。",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": [
                      "required"
                    ]
                  }
                },
                "type": "object"
              },
              "minItems": 0,
              "title": "删除",
              "type": "array",
              "uniqueItems": true,
              "ui:component": {
                "name": "bfArray"
              },
              "ui:rules": [
                {
                  "validator": "{{ $self.getValue('set').length || $self.getValue('remove').length }}",
                  "message": "请求头设置或删除至少需要配置一个"
                }
              ]
            }
          },
          "type": "object"
        }
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - bk-header-rewrite
    notes: Allow you to easily add or remove request headers. If a value for a setting contains the $ symbol, it will be treated as a variable and its value will be replaced (with the variable’s value or empty if the variable does not exist). `$arg_foo` can fetch the value of `foo` from the query string, and `$http_bar` can fetch the value of `bar` from the header.
    example: "Purpose: Set header 'X-Api-Version: 1' and delete header 'X-test'\n\nSettings: X-Api-Version: 1\nDelete: X-test"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "properties": {
            "set": {
              "description": "set headers",
              "items": {
                "properties": {
                  "key": {
                    "title": "key",
                    "description": "You can set the key of the request header, but colons (:) cannot appear in the key of the request header.",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": [
                      "required"
                    ]
                  },
                  "value": {
                    "title": "value",
                    "description": "You can set the value of the request header.",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\s\\S]*$",
                    "ui:rules": [
                      "required"
                    ]
                  }
                },
                "type": "object"
              },
              "minItems": 0,
              "title": "set",
              "type": "array",
              "ui:component": {
                "name": "bfArray"
              },
              "ui:rules": [
                {
                  "validator": "{{ $self.getValue('set').length || $self.getValue('remove').length }}",
                  "message": "At least one operation is required when setting or removing request headers."
                }
              ]
            },
            "remove": {
              "description": "remove headers",
              "items": {
                "properties": {
                  "key": {
                    "title": "key",
                    "description": "You can remove the key of the request header, but colons (:) cannot appear in the key of the request header.",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": [
                      "required"
                    ]
                  }
                },
                "type": "object"
              },
              "minItems": 0,
              "title": "remove",
              "type": "array",
              "uniqueItems": true,
              "ui:component": {
                "name": "bfArray"
              },
              "ui:rules": [
                {
                  "validator": "{{ $self.getValue('set').length || $self.getValue('remove').length }}",
                  "message": "At least one operation is required when setting or removing request headers."
                }
              ]
            }
          },
          "type": "object"
        }
      }
- model: schema.schema
  fields:
    created_time: 2022-11-24 11:59:49.409202+00:00
    updated_time: 2023-02-01 08:08:33.453910+00:00
    name: bk-ip-restriction
    type: plugin
    version: '0'
    _schema: |-
      {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "whitelist": {
            "items": {
              "anyOf": [
                {
                  "format": "ipv4",
                  "type": "string",
                  "title": "IPv4"
                },
                {
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "type": "string",
                  "title": "IPv4/CIDR"
                },
                {
                  "format": "ipv6",
                  "type": "string",
                  "title": "IPv6"
                },
                {
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "type": "string",
                  "title": "IPv6/CIDR"
                }
              ]
            },
            "type": "array",
            "minItems": 1
          },
          "message": {
            "default": "Your IP address is not allowed",
            "minLength": 1,
            "type": "string",
            "maxLength": 1024
          },
          "blacklist": {
            "items": {
              "anyOf": [
                {
                  "format": "ipv4",
                  "type": "string",
                  "title": "IPv4"
                },
                {
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                  "type": "string",
                  "title": "IPv4/CIDR"
                },
                {
                  "format": "ipv6",
                  "type": "string",
                  "title": "IPv6"
                },
                {
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                  "type": "string",
                  "title": "IPv6/CIDR"
                }
              ]
            },
            "type": "array",
            "minItems": 1
          },
          "_meta": {
            "type": "object",
            "properties": {
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "disable": {
                "type": "boolean"
              },
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              }
            }
          }
        },
        "type": "object",
        "oneOf": [
          {
            "required": [
              "whitelist"
            ]
          },
          {
            "required": [
              "blacklist"
            ]
          }
        ]
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: bk-ip-restriction
    name: IP 访问保护
    name_en: IP restriction
    is_public: true
    scope: stage_and_resource
    priority: 17662
    schema:
    - bk-ip-restriction
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - bk-ip-restriction
    notes: |-
      通过将 IP 地址列入白名单或黑名单来限制对资源的访问。支持 CIDR。每行一条数据, 并且支持空行及注释行（以 # 开头）。
    example: "作用：仅允许 IP 192.168.1.1 和 192.168.1.1 请求当前接口\n\n类型：白名单\n白名单： \n      # comment\n       192.168.1.1\n       192.168.1.2"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "oneOf": [
            {
              "required": [
                "whitelist"
              ],
              "title": "白名单",
              "properties": {
                "whitelist": {
                  "type": "string",
                  "maxLength": 51200,
                  "minLength": 7,
                  "title": "白名单",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            },
            {
              "required": [
                "blacklist"
              ],
              "title": "黑名单",
              "properties": {
                "blacklist": {
                  "type": "string",
                  "maxLength": 51200,
                  "minLength": 7,
                  "title": "黑名单",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            }
          ],
          "ui:oneOf": {
            "title": "类型"
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - bk-ip-restriction
    notes: |-
      This plugin allows you to restrict access to a Resource by either whitelisting or blacklisting IP addresses. Support CIDR. One piece of data per line, and supports blank lines and comment lines (beginning with #).
    example: "Purpose: Only IP 192.168.1.1 and 192.168.1.1 are allowed to request the current interface\n\nType: whitelist\nWhitelist: \n       # comment\n       192.168.1.1\n       192.168.1.2"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "oneOf": [
            {
              "required": [
                "whitelist"
              ],
              "title": "White list",
              "properties": {
                "whitelist": {
                  "type": "string",
                  "maxLength": 51200,
                  "minLength": 7,
                  "title": "whitelist",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            },
            {
              "required": [
                "blacklist"
              ],
              "title": "Black list",
              "properties": {
                "blacklist": {
                  "type": "string",
                  "maxLength": 51200,
                  "minLength": 7,
                  "title": "blacklist",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            }
          ],
          "ui:oneOf": {
            "title": "Type"
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: schema.schema
  fields:
    created_time: 2023-04-26 14:54:21.010753+00:00
    updated_time: 2023-04-26 14:54:21.010753+00:00
    name: bk-rate-limit
    type: plugin
    version: '0'
    _schema: |-
      {
        "properties": {
          "rates": {
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "period": {
                    "type": "integer"
                  },
                  "tokens": {
                    "type": "integer"
                  }
                }
              }
            },
            "type": "object"
          },
          "_meta": {
            "properties": {
              "priority": {
                "description": "priority of plugins by customized order",
                "type": "integer"
              },
              "disable": {
                "type": "boolean"
              },
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "filter": {
                "description": "filter determines whether the plugin needs to be executed at runtime",
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object"
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: bk-rate-limit
    name: 频率控制
    name_en: Rate Limit
    is_public: true
    scope: stage_and_resource
    priority: 17652
    schema:
    - bk-rate-limit
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - bk-rate-limit
    notes: "限制每个应用调用的请求频率。默认应用频率限制对所有应用生效，特殊应用频率限制对指定应用单独生效。\n如果在环境和资源上都配置，两个都会生效，并且在环境上配置表示对应用访问环境下所有资源的总访问频率进行限制。"
    example: "作用：默认每个应用 100 次/秒，应用 demo 200 次/秒\n\n默认频率限制：次数：100 时间范围：秒\n特殊应用频率限制：次数：200  时间范围：秒  蓝鲸应用 ID: demo"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "title": "频率控制",
          "type": "object",
          "properties": {
            "rates": {
              "type": "object",
              "properties": {
                "default": {
                  "type": "object",
                  "title": "默认应用频率限制",
                  "description": "每个应用可以调用的默认频率，以应用维度进行限制",
                  "ui:group": {
                    "type": "card",
                    "showTitle": true,
                    "style": {
                      "background": "#F5F7FA",
                      "padding": "10px 20px 10px 16px"
                    }
                  },
                  "required": [
                    "tokens",
                    "period"
                  ],
                  "properties": {
                    "tokens": {
                      "type": "integer",
                      "title": "次数",
                      "default": 100,
                      "ui:rules": [
                        "required"
                      ],
                      "ui:component": {
                        "name": "bfInput",
                        "min": 1
                      },
                      "ui:props": {
                        "labelWidth": 100
                      }
                    },
                    "period": {
                      "type": "integer",
                      "title": "时间范围",
                      "default": 1,
                      "ui:rules": [
                        "required"
                      ],
                      "ui:component": {
                        "name": "select",
                        "datasource": [
                          {
                            "label": "秒",
                            "value": 1
                          },
                          {
                            "label": "分",
                            "value": 60
                          },
                          {
                            "label": "时",
                            "value": 3600
                          },
                          {
                            "label": "天",
                            "value": 86400
                          }
                        ],
                        "clearable": false
                      },
                      "ui:props": {
                        "labelWidth": 100
                      }
                    }
                  }
                },
                "specials": {
                  "type": "array",
                  "title": "特殊应用频率限制",
                  "description": "特殊应用可以调用的频率限制，例如针对某些应用给到更大的调用频率",
                  "ui:group": {
                    "type": "card",
                    "showTitle": true,
                    "style": {
                      "background": "#F5F7FA",
                      "padding": "10px 20px 20px 16px"
                    }
                  },
                  "items": {
                    "type": "object",
                    "required": [
                      "tokens",
                      "period",
                      "bk_app_code"
                    ],
                    "ui:group": {
                      "style": {
                        "background": "#FFF",
                        "padding": "10px 10px 10px 10px"
                      }
                    },
                    "properties": {
                      "tokens": {
                        "type": "integer",
                        "title": "次数",
                        "default": 200,
                        "ui:rules": [
                          "required"
                        ],
                        "ui:component": {
                          "name": "bfInput",
                          "min": 1
                        },
                        "ui:props": {
                          "labelWidth": 90
                        }
                      },
                      "period": {
                        "type": "integer",
                        "title": "时间范围",
                        "default": 1,
                        "ui:rules": [
                          "required"
                        ],
                        "ui:component": {
                          "name": "select",
                          "datasource": [
                            {
                              "label": "秒",
                              "value": 1
                            },
                            {
                              "label": "分",
                              "value": 60
                            },
                            {
                              "label": "时",
                              "value": 3600
                            },
                            {
                              "label": "天",
                              "value": 86400
                            }
                          ],
                          "clearable": false
                        },
                        "ui:props": {
                          "labelWidth": 100
                        }
                      },
                      "bk_app_code": {
                        "type": "string",
                        "title": "蓝鲸应用 ID",
                        "pattern": "^[a-z][a-z0-9_-]{0,31}$",
                        "ui:rules": [
                          "required"
                        ],
                        "ui:props": {
                          "labelWidth": 100
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "layout": [
          [
            {
              "prop": "rates",
              "group": [
                [
                  {
                    "prop": "default",
                    "container": {
                      "grid-template-columns": "250px 200px"
                    },
                    "group": [
                      [
                        "tokens",
                        "period"
                      ]
                    ]
                  }
                ],
                [
                  {
                    "prop": "specials",
                    "container": {
                      "grid-template-columns": "250px 200px 250px"
                    },
                    "group": [
                      [
                        "tokens",
                        "period",
                        "bk_app_code"
                      ]
                    ]
                  }
                ]
              ]
            }
          ]
        ],
        "formData": {},
        "rules": {}
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - bk-rate-limit
    notes: rate limit for requests of each application, including default application rate limit, which represents the default rate limit for a single application;
      special application rate limit, which sets a separate rate limit for a specified application.
      If both are configured on the stage and resource, both will take effect, and the configuration on the stage indicates the total access rate limit of all resources under the stage.
    example: "Purpose: By default, each application is performed 100 times/second, and demo is performed 200 times/second\n\nDefault frequency limit: Times: 100 Time range: seconds\nSpecial application frequency limit: Times: 200  Time range: seconds Blue  Whale application ID: demo"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "title": "Rate Limit",
          "type": "object",
          "properties": {
            "rates": {
              "type": "object",
              "properties": {
                "default": {
                  "type": "object",
                  "title": "Default App Rate Limit",
                  "ui:group": {
                    "type": "card",
                    "showTitle": true,
                    "style": {
                      "background": "#F5F7FA",
                      "padding": "10px 20px 10px 16px"
                    }
                  },
                  "required": [
                    "tokens",
                    "period"
                  ],
                  "properties": {
                    "tokens": {
                      "type": "integer",
                      "title": "Count",
                      "default": 100,
                      "ui:rules": [
                        "required"
                      ],
                      "ui:component": {
                        "name": "bfInput",
                        "min": 1
                      },
                      "ui:props": {
                        "labelWidth": 100
                      }
                    },
                    "period": {
                      "type": "integer",
                      "title": "Time Range",
                      "default": 1,
                      "ui:rules": [
                        "required"
                      ],
                      "ui:component": {
                        "name": "select",
                        "datasource": [
                          {
                            "label": "Second",
                            "value": 1
                          },
                          {
                            "label": "Minute",
                            "value": 60
                          },
                          {
                            "label": "Hour",
                            "value": 3600
                          },
                          {
                            "label": "Day",
                            "value": 86400
                          }
                        ],
                        "clearable": false
                      },
                      "ui:props": {
                        "labelWidth": 100
                      }
                    }
                  }
                },
                "specials": {
                  "type": "array",
                  "title": "Special Apps Rate Limit",
                  "ui:group": {
                    "type": "card",
                    "showTitle": true,
                    "style": {
                      "background": "#F5F7FA",
                      "padding": "10px 20px 20px 16px"
                    }
                  },
                  "items": {
                    "type": "object",
                    "required": [
                      "tokens",
                      "period",
                      "bk_app_code"
                    ],
                    "ui:group": {
                      "style": {
                        "background": "#FFF",
                        "padding": "10px 10px 10px 10px"
                      }
                    },
                    "properties": {
                      "tokens": {
                        "type": "integer",
                        "title": "Count",
                        "default": 200,
                        "ui:rules": [
                          "required"
                        ],
                        "ui:component": {
                          "name": "bfInput",
                          "min": 1
                        },
                        "ui:props": {
                          "labelWidth": 90
                        }
                      },
                      "period": {
                        "type": "integer",
                        "title": "Time Range",
                        "default": 1,
                        "ui:rules": [
                          "required"
                        ],
                        "ui:component": {
                          "name": "select",
                          "datasource": [
                            {
                              "label": "Second",
                              "value": 1
                            },
                            {
                              "label": "Minute",
                              "value": 60
                            },
                            {
                              "label": "Hour",
                              "value": 3600
                            },
                            {
                              "label": "Day",
                              "value": 86400
                            }
                          ],
                          "clearable": false
                        },
                        "ui:props": {
                          "labelWidth": 100
                        }
                      },
                      "bk_app_code": {
                        "type": "string",
                        "title": "App Id",
                        "pattern": "^[a-z][a-z0-9_-]{0,31}$",
                        "ui:rules": [
                          "required"
                        ],
                        "ui:props": {
                          "labelWidth": 100
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "layout": [
          [
            {
              "prop": "rates",
              "group": [
                [
                  {
                    "prop": "default",
                    "container": {
                      "grid-template-columns": "250px 200px"
                    },
                    "group": [
                      [
                        "tokens",
                        "period"
                      ]
                    ]
                  }
                ],
                [
                  {
                    "prop": "specials",
                    "container": {
                      "grid-template-columns": "250px 200px 250px"
                    },
                    "group": [
                      [
                        "tokens",
                        "period",
                        "bk_app_code"
                      ]
                    ]
                  }
                ]
              ]
            }
          ]
        ],
        "formData": {},
        "rules": {}
      }
- model: plugin.plugintype
  fields:
    code: bk-status-rewrite
    name: 网关错误使用 HTTP 状态码 200(不推荐)
    name_en: Gateway error using HTTP status code 200 (not recommended)
    is_public: false
    priority: 18815
    schema: null
- model: plugin.pluginform
  fields:
    language: ''
    type:
      - bk-status-rewrite
    notes: Gateway error using HTTP status code 200 (not recommended)
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {},
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: schema.schema
  fields:
    created_time: 2023-02-02 14:54:21.010753+00:00
    updated_time: 2023-02-02 14:54:21.010788+00:00
    name: bk-verified-user-exempted-apps
    type: plugin
    version: '0'
    _schema: |-
      {
        "properties": {
          "_meta": {
            "properties": {
              "disable": {
                "type": "boolean"
              },
              "error_response": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              },
              "priority": {
                "type": "integer",
                "description": "priority of plugins by customized order"
              },
              "filter": {
                "type": "array",
                "description": "filter determines whether the plugin needs to be executed at runtime"
              }
            },
            "type": "object"
          },
          "exempted_apps": {
            "items": {
              "properties": {
                "dimension": {
                  "type": "string"
                },
                "bk_app_code": {
                  "type": "string"
                },
                "resource_ids": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "exempted_apps"
        ],
        "$comment": "this is a mark for our injected plugin schema"
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: bk-verified-user-exempted-apps
    name: 免用户认证应用白名单 (不推荐)
    name_en: Exempted user auth apps white list (not recommended)
    is_public: false
    scope: stage
    priority: 18810
    schema:
    - bk-verified-user-exempted-apps
    - plugin
    - '0'
- model: schema.schema
  fields:
    created_time: 2024-09-03 15:32:21.010753+00:00
    updated_time: 2024-09-03 15:32:21.010753+00:00
    name: bk-mock
    type: plugin
    version: '0'
    _schema: |-
      {
        "type": "object",
        "properties": {
          "response_status": {
            "type": "integer",
            "default": 200,
            "minimum": 100
          },
          "response_example": {
            "type": "string"
          },
          "response_headers": {
            "type": "object"
          }
        }
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: bk-mock
    name: mocking
    name_en: mocking
    is_public: true
    scope: resource
    priority: 17150
    schema:
    - bk-mock
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - bk-mock
    notes: 模拟 API 响应，返回指定格式，并且请求不会转发到上游。
    example: '作用：返回 json response，状态码为 200，并且携带响应头 foo:bar\n\n响应状态码：200\n响应体：{"hello": "world"}\n响应头：\n      Content-Type: application/json\n      foo: bar'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
            "response_status": {
              "type": "integer",
              "default": 200,
              "title": "响应状态码",
              "minimum": 100
            },
            "response_example": {
              "title": "响应体",
              "type": "string",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "response_headers": {
              "description": "设置响应头",
              "items": {
                "properties": {
                  "key": {
                    "title": "键",
                    "description": "You can set the key of the request header. The key of the request header cannot contain a colon (:).",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": ["required"]
                  },
                  "value": {
                    "title": "值",
                    "description": "You can set the value of the request header.",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\s\\S]*$",
                    "ui:rules": ["required"]
                  }
                },
                "type": "object"
              },
              "minItems": 0,
              "title": "响应头",
              "type": "array",
              "ui:component": {
                "name": "bfArray"
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: plugin.pluginform
  fields:
    language: 'en'
    type:
    - bk-mock
    notes: for mocking an API, it returns data in the format specified and the request is not forwarded to the Upstream.
    example: 'Purpose: Return json response with status code 200 and response header foo:bar\n\nResponse status code: 200\nResponse body: {"hello": "world"}\nResponse header: \n      Content-Type: application/json\n      foo: bar'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
            "response_status": {
              "type": "integer",
              "default": 200,
              "title": "response_status",
              "minimum": 100
            },
            "response_example": {
              "title": "response_example",
              "type": "string",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "response_headers": {
              "description": "Set the response headers",
              "title": "response_headers",
              "type": "array",
              "ui:component": {
                "name": "bfArray"
              },
              "items": {
                "properties": {
                  "key": {
                    "title": "key",
                    "description": "You can set the key of the response header. The key of the response header cannot contain a colon (:).",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": ["required"]
                  },
                  "value": {
                    "title": "value",
                    "description": "You can set the value of the response header.",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\s\\S]*$",
                    "ui:rules": ["required"]
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: schema.schema
  fields:
    created_time: 2024-09-10 11:48:21.010753+00:00
    updated_time: 2024-09-10 11:48:21.010788+00:00
    name: api-breaker
    type: plugin
    version: '0'
    _schema: |-
      {
        "type": "object",
        "properties": {
          "break_response_code": {
            "type": "integer",
            "minimum": 200,
            "maximum": 599
          },
          "break_response_body": {
            "type": "string"
          },
          "break_response_headers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "minLength": 1
                },
                "value": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": ["key", "value"]
            }
          },
          "max_breaker_sec": {
            "type": "integer",
            "minimum": 3,
            "default": 300
          },
          "unhealthy": {
            "type": "object",
            "properties": {
              "http_statuses": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "integer",
                  "minimum": 500,
                  "maximum": 599
                },
                "uniqueItems": true,
                "default": [500]
              },
              "failures": {
                "type": "integer",
                "minimum": 1,
                "default": 3
              }
            },
            "default": {
              "http_statuses": [500],
              "failures": 3
            }
          },
          "healthy": {
            "type": "object",
            "properties": {
              "http_statuses": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "integer",
                  "minimum": 200,
                  "maximum": 499
                },
                "uniqueItems": true,
                "default": [200]
              },
              "successes": {
                "type": "integer",
                "minimum": 1,
                "default": 3
              }
            },
            "default": {
              "http_statuses": [200],
              "successes": 3
            }
          }
        },
        "required": ["break_response_code"]
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: api-breaker
    name: 熔断
    name_en: Circuit Breaker
    is_public: true
    scope: resource
    priority: 1005
    schema:
    - api-breaker
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - api-breaker
    notes: 实现了 API 熔断机制，帮助开发者保护后端服务。
    example: '作用：当后端服务返回状态码 500 或 503，并达到 3 次，则触发熔断，返回响应体 helloworld，状态码为 502，并且携带响应头 foo:bar。\n第一次触发不健康状态时，熔断 2 秒。超过熔断时间后，将重新开始转发请求到上游服务，如果继续返回 500 状态码，当计数再次达到 3 次时，熔断 4 秒。依次类推（2，4，8，16，……），直到达到预设的最大熔断时间 300 秒。\n当上游服务处于不健康状态时，如果后端服务返回状态码 200，并达到 2 次时，则认为上游服务恢复至健康状态。\n\n\nbreak_response_code：502\nbreak_response_body：helloworld\nbreak_response_headers： [ { "key": "foo", "value": "bar" } ]\nmax_breaker_sec：300\nunhealthy： { "http_statuses": [ 500, 503 ], "failures": 3 }\nhealthy： { "http_statuses": [ 200 ], "successes": 2 }'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "required": [
            "break_response_code"
          ],
          "properties": {
            "break_response_code": {
              "description": "当上游服务处于不健康状态时返回的 HTTP 错误码。",
              "title": "熔断响应状态码",
              "type": "integer",
              "default": 502,
              "ui:rules": ["required"]
            },
            "break_response_body": {
              "description": "当上游服务处于不健康状态时返回的 HTTP 响应体信息。",
              "title": "熔断响应体",
              "type": "string",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "break_response_headers": {
              "description": "当上游服务处于不健康状态时返回的 HTTP 响应头信息。",
              "type": "array",
              "minItems": 0,
              "title": "熔断响应头",
              "ui:component": {
                "name": "bfArray"
              },
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "title": "键",
                    "description": "您可以设置响应头的键，请求头的键中不能包含冒号（:）。",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": ["required"]
                  },
                  "value": {
                    "title": "值",
                    "description": "您可以设置响应头的值，请求头的键中不能包含冒号（:）。",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\s\\S]*$",
                    "ui:rules": ["required"]
                  }
                }
              }
            },
            "max_breaker_sec": {
              "description": "上游服务熔断的最大持续时间，以秒为单位，最小 3 秒。",
              "title": "最大熔断时间",
              "type": "integer",
              "default": 300,
              "ui:component": {
                "name": "bfInput",
                "min": 3
              }
            },
            "unhealthy": {
              "description": "当上游服务处于不健康状态时的 HTTP 的状态码和异常请求次数。",
              "title": "不健康状态",
              "type": "object",
              "properties": {
                "http_statuses": {
                  "type": "array",
                  "title": "不健康状态码",
                  "minItems": 1,
                  "description": "上游服务处于不健康状态时的 HTTP 状态码。",
                  "items": {
                    "type": "integer",
                    "default": 503,
                    "ui:component": {
                      "name": "bfInput",
                      "min": 500,
                      "max": 599
                    }
                  },
                  "ui:component": {
                    "name": "bfArray"
                  }
                },
                "failures": {
                  "description": "上游服务在一定时间内触发不健康状态的异常请求次数。",
                  "title": "不健康次数",
                  "type": "integer",
                  "default": 3,
                  "ui:component": {
                    "name": "bfInput",
                    "min": 1
                  }
                }
              }
            },
            "healthy": {
              "description": "上游服务处于健康状态时的 HTTP 状态码和连续正常请求次数。",
              "title": "健康状态",
              "type": "object",
              "properties": {
                "http_statuses": {
                  "type": "array",
                  "title": "健康状态码",
                  "minItems": 1,
                  "description": "上游服务处于健康状态时的 HTTP 状态码。",
                  "items": {
                    "type": "integer",
                    "default": 200,
                    "ui:component": {
                      "name": "bfInput",
                      "min": 200,
                      "max": 499
                    }
                  },
                  "ui:component": {
                    "name": "bfArray"
                  }
                },
                "successes": {
                  "description": "上游服务触发健康状态的连续正常请求次数。",
                  "title": "健康次数",
                  "type": "integer",
                  "default": 3,
                  "ui:component": {
                    "name": "bfInput",
                    "min": 1
                  }
                }
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - api-breaker
    notes: API circuit breaker functionality to protect Upstream services.
    example: 'Purpose: When the backend service returns a status code of 502 and this happens 3 times, a circuit breaker is triggered. It will return a response body with “helloworld”, a status code of 502, and a response header of foo:bar.\nThe first time the unhealthy state is triggered, the circuit breaker lasts for 2 seconds. After the circuit breaker time elapses, requests will be forwarded to the upstream service again. If it continues to return a status code of 502 and the count reaches 3 times again, the circuit breaker time is extended to 4 seconds. This pattern continues (2, 4, 8, 16, …) until the preset maximum circuit breaker time of 300 seconds is reached. \nWhen the upstream service is in an unhealthy state, if a forwarded request returns a status code of 200 and this happens 2 times, the upstream service is considered to have recovered to a healthy state. \n\n\nbreak_response_code: 502\nbreak_response_body: helloworld\nbreak_response_headers: [ { "key": "foo", "value": "bar" } ]\nmax_breaker_sec: 300\nunhealthy: { "http_statuses": [ 500, 503 ], "failures": 3 }\nhealthy: { "http_statuses": [ 200 ], "successes": 2 }'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "required": [
            "break_response_code"
          ],
          "properties": {
            "break_response_code": {
              "description": "HTTP error code returned when the upstream service is in an unhealthy state.",
              "title": "Fuse response status code",
              "default": 502,
              "type": "integer",
              "ui:rules": ["required"]
            },
            "break_response_body": {
              "description": "HTTP response body information returned when the upstream service is in an unhealthy state.",
              "title": "Fuse response body",
              "type": "string",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "break_response_headers": {
              "description": "The HTTP response header returned when the upstream service is in an unhealthy state.",
              "type": "array",
              "minItems": 0,
              "title": "Fuse response head",
              "ui:component": {
                "name": "bfArray"
              },
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "title": "key",
                    "description": "You can set the key of the response header. The key of the request header cannot contain a colon (:).",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\w-]+$",
                    "ui:rules": ["required"]
                  },
                  "value": {
                    "title": "value",
                    "description": "You can set the value of the response header, and the key of the request header cannot contain a colon (:).",
                    "type": "string",
                    "maxLength": 1024,
                    "pattern": "^[\\s\\S]*$",
                    "ui:rules": ["required"]
                  }
                }
              }
            },
            "max_breaker_sec": {
              "description": "The maximum duration of the upstream service meltdown, in seconds. The minimum duration is 3 seconds.",
              "title": "Maximum fusing time",
              "type": "integer",
              "default": 300,
              "ui:component": {
                "name": "bfInput",
                "min": 3
              }
            },
            "unhealthy": {
              "description": "HTTP status code and number of abnormal requests when the upstream service is in an unhealthy state.",
              "title": "Unhealthy state",
              "type": "object",
              "properties": {
                "http_statuses": {
                  "type": "array",
                  "title": "Unhealthy status code",
                  "minItems": 1,
                  "description": "HTTP status code when the upstream service is in unhealthy state.",
                  "items": {
                    "type": "integer",
                    "default": 500,
                    "ui:component": {
                      "name": "bfInput",
                      "min": 500,
                      "max": 599
                    }
                  },
                  "ui:component": {
                    "name": "bfArray"
                  }
                },
                "failures": {
                  "description": "Number of unhealthy requests triggered by the upstream service within a certain period.",
                  "title": "Unhealthy times",
                  "type": "integer",
                  "default": 3,
                  "ui:component": {
                    "name": "bfInput",
                    "min": 1
                  }
                }
              }
            },
            "healthy": {
              "description": "HTTP status code and number of consecutive normal requests when the upstream service is in the health state.",
              "title": "Health state",
              "type": "object",
              "properties": {
                "http_statuses": {
                  "type": "array",
                  "title": "Health status code",
                  "minItems": 1,
                  "description": "HTTP status code when the upstream service is in the healthy state.",
                  "items": {
                    "type": "integer",
                    "default": 200,
                    "ui:component": {
                      "name": "bfInput",
                      "min": 200,
                      "max": 499
                    }
                  },
                  "ui:component": {
                    "name": "bfArray"
                  }
                },
                "successes": {
                  "description": "Number of consecutive normal requests that the upstream service triggers the health status.",
                  "title": "Healthy number",
                  "type": "integer",
                  "default": 3,
                  "ui:component": {
                    "name": "bfInput",
                    "min": 1
                  }
                }
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: schema.schema
  fields:
    created_time: 2024-09-03 15:32:21.010753+00:00
    updated_time: 2024-09-03 15:32:21.010753+00:00
    name: request-validation
    type: plugin
    version: '0'
    _schema: |-
      {
        "type": "object",
        "properties": {
          "header_schema": {
            "type": "object"
          },
          "body_schema": {
            "type": "object"
          },
          "rejected_code": {
            "type": "integer",
            "minimum": 200,
            "maximum": 599,
            "default": 400
          },
          "rejected_msg": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        },
        "anyOf": [
          {
            "required": ["header_schema"]
          },
          {
            "required": ["body_schema"]
          }
        ]
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: request-validation
    name: 请求校验
    name_en: request_validation
    is_public: true
    scope: resource
    priority: 2800
    schema:
    - request-validation
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - request-validation
    notes: 用于提前验证向上游服务转发的请求。该插件使用 JSON Schema 机制进行数据验证，可以验证请求的 Body 以及 Header 的数据。至少需要配置 body_schema 或 header_schema 中的一个，两者也可以同时使用。
    example: '作用：当请求体中没有包含 boolean_payload 时，则返回 400 拒绝状态码和拒绝信息\n\n"body_schema": {"type": "object","required": ["bool_payload"],"properties": {"bool_payload": {"type": "boolean"}}}\n"header_schema": {}\n"rejected_code": 400\n"rejected_msg": "not valid request body"'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
            "body_schema": {
              "type": "string",
              "maxLength": 51200,
              "title": "请求体 JSON Schema",
              "description": "request body 数据的 JSON Schema",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "header_schema": {
              "type": "string",
              "maxLength": 51200,
              "title": "请求头 JSON Schema",
              "description": "request header 数据的 JSON Schema",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "rejected_code": {
              "type": "integer",
              "default": 400,
              "title": "拒绝状态码",
              "minimum": 200
            },
            "rejected_msg": {
              "title": "拒绝信息",
              "type": "string",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: plugin.pluginform
  fields:
    language: 'en'
    type:
    - request-validation
    notes: Used to validate requests forwarded to upstream services in advance. The plug-in uses the JSON Schema mechanism for data validation, which validates the requested Body and Header data. At least one of the body_schema or header_schema needs to be configured, and both can be used at the same time.
    example: 'Purpose: When the boolean_payload argument is not filled, 400 reject status code and reject information are returned \n\n"body_schema": {"type": "object","required": ["bool_payload"],"properties": {"bool_payload": {"type": "boolean"}}}\n"header_schema": {}\n"rejected_code": 400\n"rejected_msg": "not valid request body"'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
            "body_schema": {
              "type": "string",
              "maxLength": 51200,
              "description": "request body JSON Schema",
              "title": "body JSON Schema",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "header_schema": {
              "type": "string",
              "maxLength": 51200,
              "title": "header JSON Schema",
              "description": "request header JSON Schema",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            },
            "rejected_code": {
              "type": "integer",
              "default": 400,
              "title": "rejected_code",
              "minimum": 200
            },
            "rejected_msg": {
              "title": "rejected_msg",
              "type": "string",
              "ui:component": {
                "type": "textarea",
                "rows": 10
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: schema.schema
  fields:
    created_time: 2024-09-10 11:48:21.010753+00:00
    updated_time: 2024-09-10 11:48:21.010788+00:00
    name: fault-injection
    type: plugin
    version: '0'
    _schema: |-
      {
        "type": "object",
        "properties": {
          "abort": {
            "type": "object",
            "properties": {
              "http_status": {
                "type": "integer",
                "minimum": 200
              },
              "body": {
                "type": "string",
                "minLength": 0
              },
              "percentage": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100
              },
              "vars": {
                "type": "array",
                "maxItems": 20,
                "items": {
                  "type": "array"
                }
              }
            },
            "required": ["http_status"]
          },
          "delay": {
            "type": "object",
            "properties": {
              "duration": {
                "type": "number",
                "minimum": 0
              },
              "percentage": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100
              },
              "vars": {
                "type": "array",
                "maxItems": 20,
                "items": {
                  "type": "array"
                }
              }
            },
            "required": ["duration"]
          }
        },
        "minProperties": 1
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: fault-injection
    name: 故障注入
    name_en: fault-injection
    is_public: true
    scope: resource
    priority: 11000
    schema:
    - fault-injection
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - fault-injection
    notes: 故障注入，该插件可以和其他插件一起使用，并在其他插件执行前被执行，至少要配置中断和延迟中的任意一个，两者也可以同时使用。
    example: '作用：当请求参数 name 等于 jack，并且 age 等于 18 的时候，则返回 400 拒绝状态码和响应内容\n\n"abort": {\n    "http_status": 400,\n    "body": "not valid request params",\n    "vars": [[["arg_name", "==", "jack"], ["arg_age", "==", 18]]]\n}\n'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
            "abort": {
              "description": "中断状态",
              "title": "abort",
              "type": "object",
              "properties": {
                "http_status": {
                  "description": "返回给客户端的 HTTP 状态码",
                  "title": "中断状态码",
                  "type": "integer"
                },
                "body": {
                  "description": "返回给客户端的响应数据。支持使用 NGINX 变量，如 client addr: $remote_addr\n",
                  "title": "中断响应体",
                  "type": "string",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                },
                "percentage": {
                  "description": "将被中断的请求占比，0-100",
                  "title": "中断请求占比",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 100
                },
                "vars": {
                  "type": "string",
                  "title": "中断规则",
                  "description": "执行故障注入的规则，当规则匹配通过后才会执行故障注。vars 是一个表达式的列表，来自 lua-resty-expr。",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            },
            "delay": {
              "description": "延迟状态",
              "title": "delay",
              "type": "object",
              "properties": {
                "duration": {
                  "title": "延迟时间",
                  "description": "延迟时间，单位秒，只能填入整数",
                  "type": "number"
                },
                "percentage": {
                  "description": "将被延迟的请求占比，0-100",
                  "title": "延迟请求占比",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 100
                },
                "vars": {
                  "type": "string",
                  "title": "延迟规则",
                  "description": "执行请求延迟的规则，当规则匹配通过后才会延迟请求。vars 是一个表达式列表，来自 lua-resty-expr。",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - fault-injection
    notes: The fault-injection plug-in is a fault injection plug-in that can be used with other plug-ins and executed before the other plug-ins are executed. abort and delay must be configured at least one, and both can be used at the same time.
    example: 'Purpose: When the request parameter name is equal to jack and age is 18, return 400 reject status code and response body \n\n"abort": {\n "http_status": 400,\n "body": "not valid request params",\n "vars": [[["arg_name", "==", "jack"], ["arg_age", "==", 18]]]\n}\n'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
            "abort": {
              "description": "Interrupted state",
              "title": "abort",
              "type": "object",
              "properties": {
                "http_status": {
                  "description": "Returns the HTTP status code to the client.",
                  "title": "Interrupt status code",
                  "type": "integer"
                },
                "body": {
                  "description": "Response data is returned to the client. NGINX variables such as client addr: $remote_addr\n are supported",
                  "title": "Interrupt responder",
                  "type": "string",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                },
                "percentage": {
                  "description": "The proportion of requests that will be interrupted.",
                  "title": "Proportion of interrupt requests",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 100
                },
                "vars": {
                  "type": "string",
                  "title": "Interrupt rules",
                  "description": "The fault injection rule is executed. The fault note is executed only after the rule matches. vars is a list of expressions from lua-resty-expr.",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            },
            "delay": {
              "description": "Delay status",
              "title": "delay",
              "type": "object",
              "properties": {
                "duration": {
                  "title": "Delay time",
                  "description": "The delay time can only be filled with integers",
                  "type": "string"
                },
                "percentage": {
                  "description": "The percentage of requests that will be delayed",
                  "title": "Proportion of Delayed requests",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 100
                },
                "vars": {
                  "type": "string",
                  "title": "Delay rules",
                  "description": "Execute the request delay rule. The request is delayed only when the rule matches. vars is a list of expressions from lua-resty-expr.",
                  "ui:component": {
                    "type": "textarea",
                    "rows": 10
                  }
                }
              }
            }
          }
        },
        "layout": [],
        "formData": {},
        "rules": {}
      }

- model: schema.schema
  fields:
    created_time: 2025-05-06 11:48:21.010753+00:00
    updated_time: 2025-05-06 11:48:21.010788+00:00
    name: response-rewrite
    type: plugin
    version: '0'
    _schema: |-
      {
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object",
        "properties": {
            "status_code": {
                "type": "integer",
                "description": "new status code for response",
                "minimum": 200,
                "maximum": 598
            },
            "body": {
                "type": "string",
                "description": "new body for response"
            },
            "body_base64": {
                "type": "boolean",
                "description": "whether new body for response need base64 decode before return",
                "default": false
            },
            "headers": {
                "type": "object",
                "description": "new headers for response",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "^[^:]+:[^:]*[^/]$"
                        }
                    },
                    "set": {
                      "type": "object",
                      "patternProperties": {
                        "^[^:]+$": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            }
                          ]
                        }
                      }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^[^:]+$"
                        }
                    }
                }
            },
            "vars": {
                "type": "array",
                "maxItems": 20,
                "items": {
                    "type": "array"
                }
            }
        }
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: response-rewrite
    name: Response 转换
    name_en: Response Rewrite
    is_public: true
    scope: resource
    priority: 899
    schema:
    - response-rewrite
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - response-rewrite
    notes: "插件支持修改上游服务返回的 Body 和 Header 信息。\n该插件可以应用在以下场景中：\n通过设置标头中的 status_code 和 Location 字段实现重定向。"
    example: '"status_code": 200, \n"body": {\"code\":\"ok\",\"message\":\"new json body\"}, \n"headers": {\n  "add": ["X-Server-balancer-addr: test"],\n  "set": {"X-Server-id": 3},\n  "remove": ["X-TO-BE-REMOVED"]\n}, \n "vars": [[["arg_name", "==", "jack"], ["arg_age", "==", 18]]]\n'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
              "status_code": {
                  "title": "状态码",
                  "description": "修改上游返回状态码，默认保留原始响应代码。",
                  "type": "integer",
                  "minimum": 200,
                  "maximum": 598
              },
              "body": {
                  "title": "响应体",
                  "description": "修改上游返回的 body 内容，如果设置了新内容，header 里面的 content-length 字段也会被去掉。",
                  "type": "string"
              },
              "body_base64": {
                  "description": "当设置时，在写给客户端之前，在body中传递的主体将被解码，这在一些图像和 Protobuffer 场景中使用。注意，这个字段只允许对插件配置中传递的主体进行解码，并不对上游响应进行解码。",
                  "type": "boolean",
                  "default": false
              },
              "headers": {
                  "type": "object",
                  "properties": {
                      "add": {
                        "description": "添加新的响应头",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "title": "键",
                              "description": "您可以设置响应头的键，响应头的键中不能包含冒号（:）。",
                              "type": "string",
                              "maxLength": 1024,
                              "pattern": "^[\\w-]+$",
                              "ui:rules": ["required"]
                            },
                            "value": {
                              "title": "值",
                              "description": "您可以设置响应头的值。",
                              "type": "string",
                              "maxLength": 1024,
                              "pattern": "^[\\s\\S]*$",
                              "ui:rules": ["required"]
                            }
                          }
                        },
                        "minItems": 0,
                        "title": "添加",
                        "type": "array",
                        "uniqueItems": true,
                        "ui:component": {
                          "name": "bfArray"
                        }
                      },
                      "set": {
                          "type": "array",
                          "title": "设置",
                          "minItems": 0,
                          "description": "改写响应头。",
                          "ui:component": {
                            "name": "bfArray"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "title": "键",
                                "description": "您可以设置响应头的键，响应头的键中不能包含冒号（:）。",
                                "type": "string",
                                "maxLength": 1024,
                                "pattern": "^[\\w-]+$",
                                "ui:rules": ["required"]
                              },
                              "value": {
                                "title": "值",
                                "description": "您可以设置响应头的值，响应头的键中不能包含冒号（:）。",
                                "type": "string",
                                "maxLength": 1024,
                                "pattern": "^[\\s\\S]*$",
                                "ui:rules": ["required"]
                              }
                            }
                          }
                      },
                      "remove": {
                        "description": "删除的响应头",
                        "items": {
                          "properties": {
                            "key": {
                              "title": "键",
                              "description": "您可以删除响应头的键，响应头的键中不能包含冒号（:）。",
                              "type": "string",
                              "maxLength": 1024,
                              "pattern": "^[\\w-]+$",
                              "ui:rules": [
                                "required"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "minItems": 0,
                        "title": "删除",
                        "type": "array",
                        "uniqueItems": true,
                        "ui:component": {
                          "name": "bfArray"
                        }
                      }
                  }
              },
              "vars": {
                  "type": "string",
                  "title": "表达式列表",
                  "ui:component": {
                      "type": "textarea",
                      "rows": 10
                  },
                  "description": "vars 是一个表达式列表，只有满足条件的请求和响应才会修改 body 和 header 信息，来自 lua-resty-expr。如果 vars 字段为空，那么所有的重写动作都会被无条件的执行。"
              }
          }
        }
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - response-rewrite
    notes: The response-rewrite Plugin rewrites the content returned by the Upstream.\nThis Plugin can be useful in these scenarios:\nTo set custom status_code and Location fields in the header to redirect.
    example: '"status_code": 200, \n"body": {\"code\":\"ok\",\"message\":\"new json body\"}, \n"headers": {\n  "add": ["X-Server-balancer-addr: test"],\n  "set": {"X-Server-id": 3},\n  "remove": ["X-TO-BE-REMOVED"]\n}, \n "vars": [[["arg_name", "==", "jack"], ["arg_age", "==", 18]]]\n'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
              "status_code": {
                  "title": "status code",
                  "description": "New HTTP status code in the response. If unset, falls back to the original status code.",
                  "type": "integer",
                  "minimum": 200,
                  "maximum": 598
              },
              "body": {
                  "title": "body",
                  "description": "New body of the response. The content-length would also be reset.",
                  "type": "string"
              },
              "body_base64": {
                  "description": "When set, the body passed in body will be decoded before writing to the client which is used in some image and Protobuffer scenarios. Note that this field only allows decoding the body passed in plugin configuration and does not decode upstream response.",
                  "type": "boolean",
                  "default": false
              },
              "headers": {
                  "type": "object",
                  "properties": {
                      "add": {
                        "description": "add headers",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "title": "key",
                              "description": "You can set the key of the response header, but colons (:) cannot appear in the key of the response header.",
                              "type": "string",
                              "maxLength": 1024,
                              "pattern": "^[\\w-]+$",
                              "ui:rules": ["required"]
                            },
                            "value": {
                              "title": "value",
                              "description": "You can set the value of the response header.",
                              "type": "string",
                              "maxLength": 1024,
                              "pattern": "^[\\s\\S]*$",
                              "ui:rules": ["required"]
                            }
                          }
                        },
                        "minItems": 0,
                        "title": "add",
                        "type": "array",
                        "uniqueItems": true,
                        "ui:component": {
                          "name": "bfArray"
                        }
                      },
                      "set": {
                          "title": "set",
                          "type": "array",
                          "minItems": 0,
                          "description": "set headers",
                          "ui:component": {
                            "name": "bfArray"
                          },
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "title": "key",
                                "description": "You can set the key of the response header, but colons (:) cannot appear in the key of the response header.",
                                "type": "string",
                                "maxLength": 1024,
                                "pattern": "^[\\w-]+$",
                                "ui:rules": ["required"]
                              },
                              "value": {
                                "title": "value",
                                "description": "You can set the value of the response header.",
                                "type": "string",
                                "maxLength": 1024,
                                "pattern": "^[\\s\\S]*$",
                                "ui:rules": ["required"]
                              }
                            }
                          }
                      },
                      "remove": {
                        "description": "remove headers",
                        "items": {
                          "properties": {
                            "key": {
                              "title": "key",
                              "description": "You can remove the key of the response header, but colons (:) cannot appear in the key of the response header.",
                              "type": "string",
                              "maxLength": 1024,
                              "pattern": "^[\\w-]+$",
                              "ui:rules": [
                                "required"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "minItems": 0,
                        "title": "remove",
                        "type": "array",
                        "uniqueItems": true,
                        "ui:component": {
                          "name": "bfArray"
                        }
                      }
                  }
              },
              "vars": {
                  "type": "string",
                  "title": "vars",
                  "ui:component": {
                      "type": "textarea",
                      "rows": 10
                  },
                  "description": "Nginx variable expressions to conditionally execute the rewrite. The Plugin will be executed unconditionally if this value is empty."
              }
          }
        }
      }


- model: schema.schema
  fields:
    created_time: 2025-05-12 10:00:21.010753+00:00
    updated_time: 2025-05-12 10:00:21.010788+00:00
    name: redirect
    type: plugin
    version: '0'
    _schema: |-
      {
        "$comment": "this is a mark for our injected plugin schema",
        "type": "object",
        "properties": {
            "uri": {
                "type": "string",
                "pattern": "^(\\\\\\$[0-9a-zA-Z_]+|\\$\\{[0-9a-zA-Z_]+\\}|\\$[0-9a-zA-Z_]+|\\$|[^$\\\\]+)*$"
            },
            "ret_code": {
                "type": "integer"
            }
        }
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: redirect
    name: 重定向
    name_en: Redirect
    is_public: true
    scope: resource
    priority: 900
    schema:
    - redirect
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - redirect
    notes: "用于配置 URI 重定向。"
    example: '重定向 URI: /test/default.html, \nHTTP 响应码: 301\n'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
              "uri": {
                  "title": "重定向 URI",
                  "description": "要重定向到的 URI，可以包含 NGINX 变量。例如：/test/index.html，$uri/index.html，${uri}/index.html，https://example.com/foo/bar。如果你引入了一个不存在的变量，它不会报错，而是将其视为一个空变量。",
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^(\\\\\\$[0-9a-zA-Z_]+|\\$\\{[0-9a-zA-Z_]+\\}|\\$[0-9a-zA-Z_]+|\\$|[^$\\\\]+)*$"
              },
              "ret_code": {
                  "title": "HTTP 响应码",
                  "type": "integer",
                  "minimum": 200,
                  "default": 302
              }
          }
        }
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - redirect
    notes: The redirect Plugin can be used to configure redirects.
    example: 'uri: /test/default.html, \nret_code: 301\n'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
              "uri": {
                  "title": "URI",
                  "description": "URI to redirect to. Can contain Nginx variables. For example, /test/index.html, $uri/index.html, ${uri}/index.html, https://example.com/foo/bar. If you refer to a variable name that doesn't exist, instead of throwing an error, it will treat it as an empty variable.",
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^(\\\\\\$[0-9a-zA-Z_]+|\\$\\{[0-9a-zA-Z_]+\\}|\\$[0-9a-zA-Z_]+|\\$|[^$\\\\]+)*$"
              },
              "ret_code": {
                  "title": "HTTP response code",
                  "type": "integer",
                  "minimum": 200,
                  "default": 302
              }
          }
        }
      }
      

- model: schema.schema
  fields:
    created_time: 2025-08-04 10:00:21.010753+00:00
    updated_time: 2025-08-04 10:00:21.010788+00:00
    name: bk-access-token-source
    type: plugin
    version: '0'
    _schema: |-
      {
        "type": "object",
        "properties": {
            "source": {
              "type": "string",
              "enum": ["bearer", "api_key"],
              "default": "bearer",
              "description": "The source of the authentication token, default is bearer"
            }
        }
      }
    description: '-'
    example: '-'
- model: plugin.plugintype
  fields:
    code: bk-access-token-source
    name: access_token 来源
    name_en: AccessToken Source
    is_public: true
    scope: resource
    priority: 18735
    schema:
    - bk-access-token-source
    - plugin
    - '0'
- model: plugin.pluginform
  fields:
    language: ''
    type:
    - bk-access-token-source
    notes: '从请求 header 中获取 `Authorization: Bearer {access_token}` 或 `X-API-KEY: {access_token}` 转成 `X-Bkapi-Authorization: {"access_token": "{access_token}"}`。'
    example: '作用：来源为 bearer 时，从请求 header 中获取 Authorization，来源为 api_key 时，从请求 header 中获取 X-API-KEY \n\n source: bearer'
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
              "source": {
                "title": "来源",
                "type": "string",
                "enum": ["bearer", "api_key"],
                "default": "bearer",
                "description": "认证令牌的来源，默认是 bearer"
              }
          }
        }
      }
- model: plugin.pluginform
  fields:
    language: en
    type:
    - bk-access-token-source
    notes: 'Get `Authorization: Bearer {access_token}` or `X-API-KEY: {access_token}` from the request header and convert it into `X-Bkapi-Authorization: {"access_token": "{access_token}"}`.'
    example: "Purpose: When the source is bearer, get Authorization from the request header; When the source is api_key, get X-API-KEY from the request header \n\nsource: bearer"
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {
          "type": "object",
          "properties": {
              "source": {
                "title": "source",
                "type": "string",
                "enum": ["bearer", "api_key"],
                "default": "bearer",
                "description": "The source of the authentication token, default is bearer"
              }
          }
        }
      }

- model: plugin.plugintype
  fields:
    code: bk-username-required
    name: 强制要求调用方传递 X-Bk-Username header 头
    name_en: Forcing the caller to pass the X-Bk-Username header header
    is_public: true
    scope: resource
    priority: 18725
    schema: null
- model: plugin.pluginform
  fields:
    language: ''
    type:
      - bk-username-required
    notes: Forcing the caller to pass the X-Bk-Username header header
    style: dynamic
    default_value: ''
    config: |-
      {
        "schema": {},
        "layout": [],
        "formData": {},
        "rules": {}
      }
#
# TencentBlueKing is pleased to support the open source community by making
# 蓝鲸智云 - API 网关(BlueKing - APIGateway) available.
# Copyright (C) 2025 Tencent. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#     http://opensource.org/licenses/MIT
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#
# We undertake not to change the open source license (MIT license) applicable
# to the current version of the project delivered to anyone in the future.
#
# Generated by Django 2.0.13 on 2022-04-19 01:30

import django.db.models.deletion
import jsonfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0021_backendservicestageconfig"),
    ]

    operations = [
        migrations.CreateModel(
            name="SslCertificateRelated",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("scope_type", models.CharField(max_length=64)),
                ("scope_id", models.IntegerField()),
                ("ssl_certificate_id", models.IntegerField(db_index=True)),
                ("api", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.API")),
            ],
            options={
                "db_table": "core_ssl_certificate_related",
            },
        ),
        migrations.CreateModel(
            name="StageItem",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("type", models.CharField(choices=[("node", "节点"), ("service_discovery", "服务发现注册中心")], max_length=64)),
                ("name", models.CharField(max_length=128)),
                ("description", models.TextField(blank=True, default="")),
                ("api", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.API")),
            ],
            options={
                "db_table": "core_stage_item",
            },
        ),
        migrations.CreateModel(
            name="StageItemConfig",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("config", jsonfield.fields.JSONField(blank=True, default=dict, dump_kwargs={'indent': None})),
                ("api", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.API")),
                ("stage", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.Stage")),
                ("stage_item", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.StageItem")),
            ],
            options={
                "db_table": "core_stage_item_config",
            },
        ),
        migrations.RemoveField(
            model_name="backendservicestageconfig",
            name="api",
        ),
        migrations.RemoveField(
            model_name="backendservicestageconfig",
            name="backend_service",
        ),
        migrations.RemoveField(
            model_name="backendservicestageconfig",
            name="stage",
        ),
        migrations.RemoveField(
            model_name="backendservice",
            name="_config",
        ),
        migrations.RemoveField(
            model_name="backendservice",
            name="schema",
        ),
        migrations.AddField(
            model_name="backendservice",
            name="loadbalance",
            field=models.CharField(default="roundrobin", max_length=32),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="pass_host",
            field=models.CharField(default="pass", max_length=32),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="scheme",
            field=models.CharField(default="http", max_length=32),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="ssl_enabled",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="timeout",
            field=jsonfield.fields.JSONField(blank=True, default=dict, dump_kwargs={'indent': None}),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="upstream_config",
            field=jsonfield.fields.JSONField(blank=True, default=dict, dump_kwargs={'indent': None}),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="upstream_custom_config",
            field=jsonfield.fields.JSONField(blank=True, default=dict, dump_kwargs={'indent': None}),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="upstream_extra_config",
            field=jsonfield.fields.JSONField(blank=True, default=dict, dump_kwargs={'indent': None}),
        ),
        migrations.AddField(
            model_name="backendservice",
            name="upstream_host",
            field=models.CharField(default="", max_length=512),
        ),
        migrations.AddField(
            model_name="proxy",
            name="backend_config_type",
            field=models.CharField(default="default", max_length=32),
        ),
        migrations.AlterField(
            model_name="backendservice",
            name="description",
            field=models.TextField(blank=True, default=""),
        ),
        migrations.AlterField(
            model_name="backendservice",
            name="name",
            field=models.CharField(db_index=True, max_length=128),
        ),
        migrations.AlterField(
            model_name="backendservice",
            name="upstream_type",
            field=models.CharField(default="node", max_length=64),
        ),
        migrations.AlterField(
            model_name="proxy",
            name="type",
            field=models.CharField(choices=[("http", "http"), ("mock", "mock")], max_length=20),
        ),
        migrations.DeleteModel(
            name="BackendServiceStageConfig",
        ),
        migrations.AddField(
            model_name="backendservice",
            name="stage_item",
            field=models.ForeignKey(
                blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to="core.StageItem"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="stageitemconfig",
            unique_together={("api", "stage", "stage_item")},
        ),
        migrations.AlterUniqueTogether(
            name="sslcertificaterelated",
            unique_together={("api", "scope_type", "scope_id")},
        ),
    ]

#
# TencentBlueKing is pleased to support the open source community by making
# 蓝鲸智云 - API 网关(BlueKing - APIGateway) available.
# Copyright (C) 2025 Tencent. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#     http://opensource.org/licenses/MIT
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#
# We undertake not to change the open source license (MIT license) applicable
# to the current version of the project delivered to anyone in the future.
#
# Generated by Django 2.0.13 on 2021-02-25 04:25

import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
from django.db import migrations, models

import apigateway.apps.permission.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AppAccount",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("app_code", models.CharField(max_length=30, unique=True, verbose_name="应用编码")),
                ("app_token", models.CharField(max_length=128, verbose_name="应用Token")),
                ("introduction", models.TextField(blank=True, default="", verbose_name="应用简介")),
                ("created_time", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
            ],
            options={
                "db_table": "esb_app_account",
            },
        ),
        migrations.CreateModel(
            name="AppComponentPermission",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                ("bk_app_code", models.CharField(max_length=64, verbose_name="蓝鲸应用编码")),
                ("component_id", models.IntegerField(verbose_name="组件API ID")),
                (
                    "expires",
                    models.DateTimeField(
                        default=apigateway.apps.permission.models.generate_expire_time, verbose_name="APP访问组件API的过期时间"
                    ),
                ),
            ],
            options={
                "db_table": "esb_app_component_permission",
            },
        ),
        migrations.CreateModel(
            name="ComponentDoc",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                ("language", models.CharField(choices=[("en", "English"), ("zh-hans", "简体中文")], max_length=32)),
                ("content", models.TextField(blank=True, default="")),
                ("content_md5", models.CharField(blank=True, default="", max_length=128)),
            ],
            options={
                "verbose_name": "组件API文档",
                "verbose_name_plural": "组件API文档",
                "db_table": "esb_component_doc",
            },
        ),
        migrations.CreateModel(
            name="ComponentSystem",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                ("name", models.CharField(db_index=True, max_length=64, verbose_name="名称")),
                ("description", models.CharField(max_length=128, verbose_name="描述")),
                ("comment", models.TextField(blank=True, default="", verbose_name="备注")),
                ("timeout", models.IntegerField(blank=True, help_text="单位秒", null=True, verbose_name="超时时长")),
                ("data_type", models.IntegerField(db_index=True, default=3)),
                ("_maintainers", models.CharField(blank=True, db_column="maintainers", default="", max_length=1024)),
            ],
            options={
                "db_table": "esb_component_system",
            },
        ),
        migrations.CreateModel(
            name="DocCategory",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                ("name", models.CharField(db_index=True, max_length=32, verbose_name="名称")),
                ("priority", models.IntegerField(default=1000, help_text="数字小优先级越高", verbose_name="优先级")),
                ("data_type", models.IntegerField(db_index=True, default=3)),
            ],
            options={
                "verbose_name": "文档分类",
                "verbose_name_plural": "文档分类",
                "db_table": "esb_doc_category",
            },
        ),
        migrations.CreateModel(
            name="ESBChannel",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                (
                    "name",
                    models.CharField(blank=True, default="", help_text="组件API英文名", max_length=64, verbose_name="名称"),
                ),
                ("description", models.CharField(max_length=128, verbose_name="描述")),
                ("method", models.CharField(blank=True, default="", max_length=32, verbose_name="请求方法")),
                ("path", models.CharField(max_length=255, verbose_name="请求路径")),
                ("component_codename", models.CharField(max_length=255, verbose_name="组件类代号")),
                (
                    "permission_level",
                    models.CharField(
                        choices=[("unlimited", "无限制"), ("normal", "普通"), ("sensitive", "敏感"), ("special", "特殊")],
                        max_length=32,
                        verbose_name="权限级别",
                    ),
                ),
                ("timeout", models.IntegerField(blank=True, help_text="单位秒", null=True, verbose_name="超时时长")),
                ("config", jsonfield.fields.JSONField(default=dict)),
                ("is_active", models.BooleanField(default=False, verbose_name="是否开启")),
                ("is_public", models.BooleanField(default=False, verbose_name="是否公开")),
                ("data_type", models.IntegerField(db_index=True, default=3)),
                (
                    "system",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="bkcore.ComponentSystem"),
                ),
            ],
            options={
                "db_table": "esb_channel",
            },
        ),
        migrations.CreateModel(
            name="ESBChannelExtend",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                ("config_fields", jsonfield.fields.JSONField(blank=True, null=True, dump_kwargs={'indent': None})),
                (
                    "component",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="bkcore.ESBChannel"),
                ),
            ],
            options={
                "db_table": "esb_channel_extend",
            },
        ),
        migrations.CreateModel(
            name="FunctionController",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                ("func_code", models.CharField(max_length=64, verbose_name="功能code")),
                ("func_name", models.CharField(max_length=64, verbose_name="功能名称")),
                ("func_desc", models.TextField(blank=True, default="", verbose_name="功能描述")),
                ("switch_status", models.BooleanField(default=True, verbose_name="是否开启")),
                (
                    "wlist",
                    models.TextField(
                        blank=True, default="", help_text="支持两种格式数据，以逗号、分号分隔的字符串，及JSON格式字符串", verbose_name="功能测试白名单"
                    ),
                ),
            ],
            options={
                "db_table": "esb_function_controller",
            },
        ),
        migrations.CreateModel(
            name="RealTimelineEvent",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                ("system_name", models.CharField(max_length=32, verbose_name="系统名称")),
                ("type", models.CharField(max_length=64, verbose_name="事件类型")),
                ("data", jsonfield.fields.JSONField()),
                ("ts_happened_at", models.FloatField(verbose_name="事件时间戳")),
            ],
            options={
                "db_table": "esb_real_timeline_event",
            },
        ),
        migrations.CreateModel(
            name="SystemDocCategory",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("board", models.CharField(blank=True, db_index=True, default="", max_length=64)),
                (
                    "doc_category",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="bkcore.DocCategory"),
                ),
                (
                    "system",
                    models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to="bkcore.ComponentSystem"),
                ),
            ],
            options={
                "db_table": "esb_system_doc_category",
            },
        ),
        migrations.CreateModel(
            name="WxmpAccessToken",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("wx_app_id", models.CharField(max_length=128, verbose_name="微信APPID")),
                ("access_token", models.CharField(max_length=1024, verbose_name="凭证")),
                ("expires", models.DateTimeField(verbose_name="凭证过期时间")),
                ("last_updated_time", models.DateTimeField(default=django.utils.timezone.now, verbose_name="最后访问时间")),
            ],
            options={
                "verbose_name": "微信公众号AccessToken",
                "verbose_name_plural": "微信公众号AccessToken",
                "db_table": "esb_wxmp_access_token",
            },
        ),
        migrations.AlterUniqueTogether(
            name="realtimelineevent",
            unique_together={("board", "system_name", "ts_happened_at")},
        ),
        migrations.AlterUniqueTogether(
            name="functioncontroller",
            unique_together={("board", "func_code")},
        ),
        migrations.AlterUniqueTogether(
            name="doccategory",
            unique_together={("board", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="componentsystem",
            unique_together={("board", "name")},
        ),
        migrations.AddField(
            model_name="componentdoc",
            name="component",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="bkcore.ESBChannel"),
        ),
        migrations.AlterUniqueTogether(
            name="appcomponentpermission",
            unique_together={("board", "bk_app_code", "component_id")},
        ),
        migrations.AlterUniqueTogether(
            name="esbchannel",
            unique_together={("board", "method", "path")},
        ),
        migrations.AlterUniqueTogether(
            name="componentdoc",
            unique_together={("board", "component", "language")},
        ),
    ]

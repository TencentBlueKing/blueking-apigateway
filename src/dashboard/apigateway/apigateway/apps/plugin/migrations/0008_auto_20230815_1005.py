#
# TencentBlueKing is pleased to support the open source community by making
# 蓝鲸智云 - API 网关(BlueKing - APIGateway) available.
# Copyright (C) 2025 Tencent. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#     http://opensource.org/licenses/MIT
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#
# We undertake not to change the open source license (MIT license) applicable
# to the current version of the project delivered to anyone in the future.
#
# Generated by Django 3.2.18 on 2023-08-15 02:05

from django.db import migrations
from django.db.models import Count


def forwards_func(apps, schema_editor):
    PluginConfig = apps.get_model("plugin", "PluginConfig")
    PluginBinding = apps.get_model("plugin", "PluginBinding")

    query = PluginBinding.objects.values("config_id").annotate(cnt=Count("config_id")).filter(cnt__gte=2)
    for d in query:
        config_id = d["config_id"]
        config = PluginConfig.objects.get(id=config_id)

        bindings = PluginBinding.objects.filter(config=config)
        count = 0
        for binding in bindings:
            count += 1
            if count == 1:
                # skip the first one, it keep the origin config
                continue

            # make a new config for the bind
            new_config = PluginConfig(
                gateway=config.gateway,
                name=config.name,
                type=config.type,
                description=config.description,
                description_en=config.description_en,
                yaml=config.yaml,
            )
            new_config.save()
            # update the binding's config
            binding.config = new_config
            binding.save()


class Migration(migrations.Migration):

    dependencies = [
        ("plugin", "0007_auto_20230814_1526"),
    ]

    operations = [migrations.RunPython(forwards_func)]

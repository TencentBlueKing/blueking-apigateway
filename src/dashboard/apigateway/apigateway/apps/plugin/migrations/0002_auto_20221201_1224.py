#
# TencentBlueKing is pleased to support the open source community by making
# 蓝鲸智云 - API 网关(BlueKing - APIGateway) available.
# Copyright (C) 2025 Tencent. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#     http://opensource.org/licenses/MIT
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#
# We undertake not to change the open source license (MIT license) applicable
# to the current version of the project delivered to anyone in the future.
#
# Generated by Django 2.0.13 on 2022-12-01 04:24

import django.db.models.deletion
import django.db.models.manager
import jsonfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("schema", "0005_auto_20220307_1601"),
        ("core", "0024_auto_20220915_1106"),
        ("plugin", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PluginConfig",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_time", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("name", models.CharField(db_index=True, max_length=64)),
                ("description", models.TextField(blank=True, default="")),
                ("description_en", models.TextField(blank=True, default="")),
                ("yaml", models.TextField(blank=True, default=None, null=True)),
                ("api", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.API")),
            ],
            options={
                "verbose_name": "插件配置",
                "verbose_name_plural": "插件配置",
                "db_table": "plugin_config",
            },
        ),
        migrations.CreateModel(
            name="PluginForm",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("language", models.CharField(blank=True, max_length=16)),
                ("notes", models.TextField(blank=True, default="", help_text="notes for this plugin")),
                ("notes_en", models.TextField(blank=True, default="", help_text="notes for this plugin")),
                (
                    "style",
                    models.CharField(
                        choices=[("raw", "原生"), ("dynamic", "动态"), ("fix", "固定")], help_text="表单样式", max_length=32
                    ),
                ),
                ("default_value", models.TextField(blank=True, default=None, help_text="default value", null=True)),
                (
                    "config",
                    jsonfield.fields.JSONField(
                        blank=True, default=dict, help_text="ui schema for config form", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "插件表单",
                "verbose_name_plural": "插件表单",
                "db_table": "plugin_form",
            },
            managers=[
                ("managers", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="PluginType",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.CharField(db_index=True, help_text="apisix plugin name", max_length=64, unique=True)),
                ("name", models.CharField(help_text="dashboard display name", max_length=128)),
                (
                    "name_en",
                    models.CharField(
                        blank=True, default=None, help_text="dashboard display name", max_length=128, null=True
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                (
                    "schema",
                    models.ForeignKey(
                        blank=True,
                        help_text="plugin config json schema",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="schema.Schema",
                    ),
                ),
            ],
            options={
                "verbose_name": "插件类型",
                "verbose_name_plural": "插件类型",
                "db_table": "plugin_type",
            },
        ),
        migrations.AlterField(
            model_name="plugin",
            name="type",
            field=models.CharField(
                choices=[
                    ("ip-restriction", "IP访问控制"),
                    ("rate_limit", "频率控制"),
                    ("cors", "CORS"),
                    ("circuit_breaker", "断路器"),
                    ("bk-verified-user-exempted-apps", "[仅环境] 免用户认证应用白名单"),
                ],
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name="pluginbinding",
            name="plugin",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="plugin.Plugin"),
        ),
        migrations.AlterField(
            model_name="pluginbinding",
            name="type",
            field=models.CharField(
                choices=[
                    ("ip-restriction", "IP访问控制"),
                    ("rate_limit", "频率控制"),
                    ("cors", "CORS"),
                    ("circuit_breaker", "断路器"),
                    ("bk-verified-user-exempted-apps", "[仅环境] 免用户认证应用白名单"),
                ],
                max_length=32,
                null=True,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="pluginbinding",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="pluginform",
            name="type",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="plugin.PluginType"),
        ),
        migrations.AddField(
            model_name="pluginconfig",
            name="type",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="plugin.PluginType"),
        ),
        migrations.AddField(
            model_name="pluginbinding",
            name="config",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to="plugin.PluginConfig"),
        ),
        migrations.AlterUniqueTogether(
            name="pluginform",
            unique_together={("language", "type")},
        ),
        migrations.AlterUniqueTogether(
            name="pluginconfig",
            unique_together={("api", "name", "type")},
        ),
    ]

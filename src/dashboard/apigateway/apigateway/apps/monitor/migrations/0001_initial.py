#
# TencentBlueKing is pleased to support the open source community by making
# 蓝鲸智云 - API 网关(BlueKing - APIGateway) available.
# Copyright (C) 2025 Tencent. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#     http://opensource.org/licenses/MIT
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#
# We undertake not to change the open source license (MIT license) applicable
# to the current version of the project delivered to anyone in the future.
#
# Generated by Django 2.0.13 on 2019-11-27 02:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("schema", "0001_initial"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AlarmFilterConfig",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("updated_time", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("_config", models.TextField(db_column="config")),
                (
                    "alarm_type",
                    models.CharField(
                        choices=[
                            ("resource_backend", "资源后端错误"),
                            ("app_request", "蓝鲸应用请求错误"),
                            ("nginx_error", "Nginx错误"),
                        ],
                        db_index=True,
                        max_length=64,
                    ),
                ),
                ("comment", models.CharField(blank=True, default="", max_length=512)),
                (
                    "api",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="core.API"
                    ),
                ),
                ("schema", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="schema.Schema")),
            ],
            options={
                "verbose_name": "监控告警过滤配置",
                "verbose_name_plural": "监控告警过滤配置",
                "db_table": "monitor_alarm_filter_config",
            },
        ),
        migrations.CreateModel(
            name="AlarmRecord",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("alarm_attr_id", models.IntegerField(verbose_name="监控平台告警特性ID")),
                ("alarm_id", models.CharField(db_index=True, max_length=32, verbose_name="监控平台告警ID")),
                ("source_time", models.DateTimeField(blank=True, null=True, verbose_name="监控平台事件源时间")),
                ("match_dimension", models.TextField(blank=True, default="", verbose_name="监控平台匹配维度")),
                (
                    "status",
                    models.CharField(
                        choices=[("received", "已接收"), ("skipped", "已忽略"), ("success", "告警成功"), ("failure", "告警失败")],
                        max_length=32,
                        verbose_name="告警状态",
                    ),
                ),
                ("message", models.TextField(blank=True, default="", verbose_name="告警消息")),
                ("comment", models.TextField(blank=True, default="", verbose_name="备注")),
                ("created_time", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="创建时间")),
                ("updated_time", models.DateTimeField(auto_now=True, verbose_name="修改时间")),
            ],
            options={
                "verbose_name": "监控告警记录",
                "verbose_name_plural": "监控告警记录",
                "db_table": "monitor_alarm_record",
            },
        ),
        migrations.CreateModel(
            name="AlarmStrategy",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_time", models.DateTimeField(blank=True, null=True)),
                ("updated_time", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=32, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=32, null=True)),
                ("_config", models.TextField(db_column="config")),
                ("name", models.CharField(max_length=128)),
                (
                    "alarm_type",
                    models.CharField(
                        choices=[("resource_backend", "API Gateway 请求后端错误")], db_index=True, max_length=64
                    ),
                ),
                ("_api_labels", models.TextField(blank=True, db_column="api_labels", default="")),
                ("enabled", models.BooleanField(default=True)),
                ("api", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.API")),
                ("schema", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="schema.Schema")),
            ],
            options={
                "verbose_name": "监控告警策略",
                "verbose_name_plural": "监控告警策略",
                "db_table": "monitor_alarm_strategy",
            },
        ),
        migrations.AddField(
            model_name="alarmrecord",
            name="alarm_strategy",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="monitor.AlarmStrategy"
            ),
        ),
    ]

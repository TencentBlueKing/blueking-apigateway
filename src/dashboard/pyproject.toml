[project]
name = "apigateway-dashboard"
version = "1.0.0"
description = ""
authors = []
requires-python = ">=3.11,<3.12"
dependencies = [
    "django==4.2.23",
    "djangorestframework==3.16.0",
    "pymysql==1.1.1",
    "celery==5.5.3",
    "django-celery-beat==2.8.1",
    "gevent==25.5.1",
    "requests==2.32.4",
    "arrow==1.3.0",
    "raven==6.10.0",
    "cachetools==6.1.0",
    "gunicorn==23.0.0",
    "jsonschema==4.24.0",
    "drf-yasg==1.21.10",
    "whitenoise==6.9.0",
    "python-json-logger==3.3.0",
    "django-cors-headers==4.7.0",
    "elasticsearch==7.7.1",
    "elasticsearch-dsl==7.4.1",
    "werkzeug==3.1.3",
    "redis==6.2.0",
    "ruamel.yaml==0.18.6",
    "pyyaml==6.0.2",
    "PyJWT==2.9.0",
    "pydantic==2.11.7",
    "django-environ==0.12.0",
    "jsonfield==3.1.0",
    "importlib-metadata==8.4.0",
    "greenlet==3.2.3",
    "bkpaas-auth==3.1.2",
    "blue-krill==2.1.2",
    "bk-crypto-python-sdk==2.0.1",
    "cryptography==45.0.5",
    "apigw-manager==4.1.0",
    "bkapi-client-generator==0.1.30",
    "curlify==2.2.1",
    "bkapi-component-open>=1.0.3,<2",
    "django-prometheus==2.4.1",
    "bkapi-client-core==1.2.0",
    "python-redis-lock==4.0.0",
    "etcd3==0.12.0",
    "grpcio==1.73.1",
    "protobuf==6.31.1",
    "bkapi-bk-apigateway==1.0.11",
    "docutils==0.21.2",
    "Pygments==2.18.0",
    "Pillow==11.0.0",
    "opentelemetry-api==1.35.0",
    "opentelemetry-sdk==1.35.0",
    "opentelemetry-exporter-otlp==1.35.0",
    "opentelemetry-instrumentation-django==0.56b0",
    "opentelemetry-instrumentation-dbapi==0.56b0",
    "opentelemetry-instrumentation-redis==0.56b0",
    "opentelemetry-instrumentation-requests==0.56b0",
    "opentelemetry-instrumentation-logging==0.56b0",
    "opentelemetry-instrumentation-celery==0.56b0",
    "django-filter==25.1",
    "django-add-default-value==0.10.0",
    "pypi-simple==1.6.1",
    "bk-notice-sdk==1.4.2",
    "twine==6.1.0",
    "jinja2==3.1.6",
    "setuptools==80.9.0",
    "pycryptodomex==3.23.0",
    "certifi==2025.7.14",
    "sqlparse==0.5.3",
    "future==1.0.0",
    "openapi-spec-validator>=0.7.2,<0.8",
    "prance>=23.6.21.0,<24",
    "py-openapi-schema-to-json-schema==0.0.3",
    "faker==30.8.1",
    "concurrent-log-handler==0.9.28",
    "djangoql>=0.18.1,<0.19",
    "openai==1.88.0",
]

[dependency-groups]
dev = [
    "nose==1.3.7",
    "django-nose==1.4.7",
    "coverage==7.9.2",
    "django-dynamic-fixture==4.0.1",
    "pytest-xdist==3.8.0",
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "pytest-django==4.11.1",
    "pytest-benchmark==5.1.0",
    "pytest-mock==3.14.1",
    "pytest-pretty==1.3.0",
    "Faker==30.8.1",
    "responses==0.25.7",
    "pre-commit==4.2.0",
    "mypy==1.16.1",
    "rope==1.13.0",
    "watchdog==6.0.0",
    "tox==4.27.0",
    "ipython==8.29.0",
    "fakeredis==2.30.1",
    "ruff==0.12.3",
    "types-requests==2.31.0.1",
    "types-python-dateutil==2.9.0.20250708",
    "types-redis==4.6.0.20241004",
    "types-cachetools==6.0.0.20250525",
    "types-pytz==2025.2.0.20250516",
    "types-docutils==0.21.0.20250710",
    "types-PyYAML==6.0.12.20240311",
    "types-PyMySQL==1.1.0.20240524",
    "import-linter==2.3",
]

[tool.uv]
package = false

[[tool.uv.index]]
# url = "https://mirrors.tencent.com/pypi/simple"
url = "https://pypi.org/simple/"
default = true

[tool.uv.sources]
etcd3 = { git = "https://github.com/kragniz/python-etcd3.git", rev = "e58a899579ba416449c4e225b61f039457c8072a" }


[tool.mypy]
ignore_missing_imports = true
follow_imports="skip"
no_implicit_optional = true
show_error_codes = true
strict_optional=true
pretty=true
exclude = '''(?x)(
    editions.*\.py$
)'''

[[tool.mypy.overrides]]
module = [
    "*.migrations.*",
    "*.conf.*",
    "*.editions.*",
]
ignore_errors = true

[tool.pytest.ini_options]
addopts = "-p no:pastebin -p no:nose -p no:doctest -p no:warnings"
testpaths = [
    "apigateway/apigateway/tests"
]

[build-system]
requires = ["uv_build>=0.8.0,<0.9.0"]
build-backend = "uv_build"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*",
]

# Same as Black.
line-length = 119

# Assume Python 3.8
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E",
    "F",
    "W",
    "I",
    "C90",
    "B",
    "PIE",
    "C4",
    "PL",
    "RET",
    "N",
    "PERF",
    "G",
    "TRY",
    "SIM",
    "LOG",
    "Q",
    "TID",
    "TC",
]

# Disable E501 until this issue is fixed: https://github.com/astral-sh/ruff/issues/3825
ignore = [
    # https://beta.ruff.rs/docs/rules/assert-raises-exception/
    "B017",
    # https://beta.ruff.rs/docs/rules/raise-without-from-inside-except/
    "B904",
    # https://beta.ruff.rs/docs/rules/zip-without-explicit-strict/
    "B905",
    # https://beta.ruff.rs/docs/rules/line-too-long/
    "E501",
    # https://beta.ruff.rs/docs/rules/ambiguous-variable-name/
    "E741",
    # https://beta.ruff.rs/docs/rules/unused-variable/
    "F841",
    # https://beta.ruff.rs/docs/rules/error-suffix-on-exception-name/
    "N818",
    # https://beta.ruff.rs/docs/rules/try-except-in-loop/
    "PERF203",
    # https://beta.ruff.rs/docs/rules/too-many-arguments/
    "PLR0913",
    # https://beta.ruff.rs/docs/rules/raise-vanilla-args/
    "TRY003",
    # https://beta.ruff.rs/docs/rules/try-consider-else/
    "TRY300",
    # https://beta.ruff.rs/docs/rules/raise-within-try/
    "TRY301",
    # https://beta.ruff.rs/docs/rules/magic-value-comparison/
    "PLR2004",
    # https://beta.ruff.rs/docs/rules/suppressible-exception/
    "SIM105",
    # https://beta.ruff.rs/docs/rules/open-file-with-context-handler/
    "SIM115",
    # https://docs.astral.sh/ruff/rules/needless-bool/
    "SIM103",
    # https://docs.astral.sh/ruff/rules/abstract-base-class-without-abstract-method/
    "B024",
]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 12

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"

# [tool.ruff.pep8-naming]

# https://import-linter.readthedocs.io/en/stable/contract_types.html
[tool.importlinter]
root_package = "apigateway"
include_external_packages = true

[[tool.importlinter.contracts]]
id="global-layers"
name="global-layers"
type="layers"
layers = [
    "apigateway.apis",
    "apigateway.biz",
    "apigateway.controller",
    "apigateway.service",
    "apigateway.components",
    "apigateway.apps",
    "apigateway.core",
    "apigateway.common",
    "apigateway.utils",
]
ignore_imports = [
    # 可信的依赖
    "apigateway.common.permissions.permissions -> apigateway.core.models",
    "apigateway.common.permissions.permissions -> apigateway.core.constants",
    "apigateway.common.factories.schema -> apigateway.core.constants",
    # 可忽略的依赖
    # -- django command
    "apigateway.core.management.commands.* -> apigateway.biz.**",
    "apigateway.core.management.commands.sync_default_micro_gateway -> apigateway.controller.micro_gateway_config",
    "apigateway.core.management.commands.update_jwt_key -> apigateway.service.gateway_jwt",
    "apigateway.apps.gateway.management.commands.revoke_gateways -> apigateway.biz.gateway",
    "apigateway.apps.gateway.management.commands.revoke_gateways -> apigateway.controller.publisher.publish",
    "apigateway.apps.gateway.management.commands.revoke_stage -> apigateway.controller.publisher.publish",
    # -- celery task
    "apigateway.apps.permission.tasks -> apigateway.components.*",
    "apigateway.apps.permission.tasks -> apigateway.biz.permission",
    "apigateway.apps.monitor.tasks -> apigateway.service.alert_flow.*",
    "apigateway.apps.monitor.tasks -> apigateway.service.alert_flow.*.*",
    "apigateway.apps.metrics.tasks -> apigateway.service.statistics",
    "apigateway.controller.tasks.release -> apigateway.biz.resource_version",
    # -- esb legacy
    "apigateway.apps.esb.*.* -> apigateway.biz.*",
    "apigateway.apps.esb.*.* -> apigateway.biz.*.*",
    "apigateway.apps.esb.component.convertor -> apigateway.components.esb_components",
    "apigateway.apps.esb.status.es_client -> apigateway.service.es.clients",
    # 需要重构的依赖
]

[[tool.importlinter.contracts]]
id="api-layers"
name="api-layers"
type="independence"
modules = [
    "apigateway.apis.open",
    "apigateway.apis.web",
    "apigateway.apis.v2.inner",
    "apigateway.apis.v2.sync",
    "apigateway.apis.v2.open",
]


[[tool.importlinter.contracts]]
id="data-source-layer"
name="data-source-layer"
type="independence"
modules = [
    "apigateway.apps",
    "apigateway.core",
    "apigateway.components",
]
ignore_imports = [
    # 可信的依赖
    "apigateway.apps.*.* -> apigateway.core.*",
    # 可忽略的依赖
    # -- celery task
    "apigateway.apps.permission.tasks -> apigateway.components.*",
    "apigateway.apps.permission.tasks -> apigateway.biz.permission",
    "apigateway.apps.monitor.tasks -> apigateway.service.alert_flow.*",
    "apigateway.apps.monitor.tasks -> apigateway.service.alert_flow.*.*",
    "apigateway.apps.metrics.tasks -> apigateway.service.statistics",
    # -- django commands
    "apigateway.apps.*.management.commands.* -> apigateway.core.models",
    "apigateway.core.management.commands.* -> apigateway.biz.gateway",
    "apigateway.apps.gateway.management.commands.revoke_gateways -> apigateway.biz.gateway",
    "apigateway.apps.gateway.management.commands.revoke_gateways -> apigateway.controller.publisher.publish",
    "apigateway.apps.gateway.management.commands.revoke_gateways -> apigateway.core.constants",
    "apigateway.apps.gateway.management.commands.revoke_stage -> apigateway.controller.publisher.publish",
    "apigateway.apps.gateway.management.commands.revoke_stage -> apigateway.core.constants",
    # -- esb legacy
    "apigateway.apps.esb.*.* -> apigateway.core.models",
    "apigateway.apps.esb.*.* -> apigateway.core.constants",
    "apigateway.apps.esb.*.* -> apigateway.biz.*",
    "apigateway.apps.esb.*.* -> apigateway.biz.*.*",
    "apigateway.apps.esb.*.* -> apigateway.components.*",
    "apigateway.apps.esb.status.es_client -> apigateway.service.es.clients",
]

[tool.poetry]
name = "apigateway-dashboard"
version = "1.0.0"
description = ""
authors = []

[tool.poetry.dependencies]
python = "~3.6.6 || ~3.7"
dataclasses = {version = "^0.7", python = "~3.6.1"}
Django = "3.2.18"
mysqlclient = "2.1.1"
# celery = "5.1.2"
celery = "4.4.7"
# django-celery-beat = "2.2.1"
django-celery-beat = "2.2.0"
gevent = "22.10.2"
requests = "2.27.1"
arrow = "1.2.3"
raven = "6.10.0"
cachetools = "4.2.4"
gunicorn = "20.1.0"
jsonschema = "3.2.0"
djangorestframework = "3.14.0"
drf-yasg = "1.21.5"
whitenoise = "5.3.0"
python-json-logger = "2.0.7"
django-cors-headers = "3.10.1"
elasticsearch = "7.7.1"
elasticsearch-dsl = "7.4.1"
werkzeug = "2.0.3"
redis = "4.1.4"
"ruamel.yaml" = "0.17.21"
PyJWT = "1.7.1"
pydantic = "1.9.2"
django-environ = "0.8.1"
typing_extensions = "4.1.1"
jsonfield = "3.1.0"
importlib-metadata = "4.8.3"
greenlet = "2.0.2"
bkpaas-auth = "2.0.4"
blue-krill = "1.2.3"
bk-iam = "1.3.4"
cryptography = "3.4.8"
apigw-manager = "1.1.7"
tencent-apigateway-common = "0.1.11"
bkapi-client-generator = "0.1.28"
curlify = "^2.2.1"
bkapi-component-open = "^1.0.3"
django-prometheus = "2.2.0"
bkapi-client-core = "1.1.8"
bkapi-bcs-api-gateway = "1.12.1"
bkapi-paasv3 = "^1.0.1"
python-redis-lock = "^3.7.0"
cattrs = [
    {version = "~1.0.0", python = "<3.7.0"},
    {version = "22.2.0", python = "~3.7"}
]
attrs = "22.2.0"
etcd3 = "^0.12.0"
grpcio = "1.44.0"
bkapi-bk-apigateway = "1.0.8"
docutils = "0.18.1"
Pygments = "2.14.0"
# Pillow for ImageField
Pillow = "^8.4.0"
opentelemetry-api = "1.7.1"
opentelemetry-sdk = "1.7.1"
opentelemetry-exporter-otlp = "1.7.1"
opentelemetry-instrumentation-django = "0.26b1"
opentelemetry-instrumentation-dbapi = "0.26b1"
opentelemetry-instrumentation-redis = "0.26b1"
opentelemetry-instrumentation-requests = "0.26b1"
opentelemetry-instrumentation-celery = "0.26b1"
opentelemetry-instrumentation-logging = "0.26b1"
opentelemetry-exporter-jaeger = "1.7.1"

[tool.poetry.group.dev.dependencies]
nose = "1.3.7"
django-nose = "1.4.7"
coverage = "6.2"
django-dynamic-fixture = "3.1.2"
pytest-xdist = "3.0.2"
pytest = "7.0.1"
pytest-cov = "4.0.0"
pytest-django = "4.5.2"
pytest-benchmark = "3.4.1"
pytest-mock = "3.6.1"
Faker = "14.2.1"
responses = "0.17.0"
pre-commit = "2.17.0"
mypy = "*"
black = "^21.12b0"
rope = "1.1.1"
watchdog = "^1.0.1"
tox = "^3.25.1"
ipython = "^7"
fakeredis = "^1.7.4"
types-requests = "^2.28.11.16"
types-python-dateutil = "^2.8.19.10"
types-redis = "^4.3.21.7"
types-cachetools = "^5.3.0.4"
types-pytz = "^2022.7.0.0"
types-dataclasses = {version = "^0.6.6", python = "~3.6.1"}
ruff = {version = "^0.0.277", python = "~3.7.0"}
# isort = "5.10.1"
pytest-pretty = {version = "^1.1.0", python = "~3.7.0"}
types-docutils = "^0.19.1.6"
types-PyYAML = "6.0.12.9"

[[tool.poetry.source]]
name = "tencent"
url = "https://mirrors.cloud.tencent.com/pypi/simple/"
default = true

[tool.black]
line-length = 119
force-exclude = '''
/(
  node_modules/.*
  | migrations
)/
'''

# [tool.isort]
# multi_line_output = 3
# include_trailing_comma = 'true'
# force_grid_wrap = 0
# use_parentheses = 'true'
# line_length = 119
# skip_glob = ["*/migrations/**"]
# profile = "black"
# src_paths = ["apigateway"]

[tool.mypy]
ignore_missing_imports = true
follow_imports="skip"
no_implicit_optional = true
show_error_codes = true
strict_optional=true
pretty=true
exclude = '''(?x)(
    editions.*\.py$
)'''

[[tool.mypy.overrides]]
module = [
    "*.migrations.*",
    "*.conf.*",
    "*.editions.*",
]
ignore_errors = true

[tool.flake8]
ignore = "W503,E203,E741,F841"
max-line-length = 119
max-complexity = 12
format = "pylint"
show_source = "true"
statistics = "true"
count = "true"
exclude = "*migrations*,*.pyc,.git,__pycache__,venv"

[tool.pytest.ini_options]
addopts = "-p no:pastebin -p no:nose -p no:doctest -p no:warnings"
testpaths = [
    "apigateway/apigateway/tests"
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F", "W", "I", "C90"]
# TODO: enable `SIM` / `RET` / `N` / `C4` / `G` / `PT` / `PL` / `TRY` / `PERF`
# Disable E501 until this issue is fixed: https://github.com/astral-sh/ruff/issues/3825
ignore = ["E741", "F841", "E501"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*",
]

# Same as Black.
line-length = 119

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 12

[tool.ruff.isort]
relative-imports-order = "closest-to-furthest"

# [tool.ruff.pep8-naming]
